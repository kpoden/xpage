@font-face{font-family:"FrankLight";src:url(../fonts/FrankLight.eot);src:url(../fonts/FrankLight.eot?#iefix) format("embedded-opentype"),url(../fonts/FrankLight.woff) format("woff"),url(../fonts/FrankLight.ttf) format("truetype");font-style:normal;font-weight:300}@font-face{font-family:"Frank";src:url(../fonts/FrankRegular.eot);src:url(../fonts/FrankRegular.eot?#iefix) format("embedded-opentype"),url(../fonts/FrankRegular.woff) format("woff"),url(../fonts/FrankRegular.ttf) format("truetype");font-style:normal;font-weight:500}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus{outline:0}body{font-family:Frank,Helvetica,Arial,sans-serif;background:#e5e5e5;color:#373334}.container{max-width:1500px;margin:0 auto;min-width:330px;position:relative}@media (max-width:1600px){.container{margin:0 20px}}ul{list-style:none;margin:0;padding:0}.btn,a{-webkit-transition:.2s;transition:.2s}a{text-decoration:none;color:inherit}.wrapper{max-width:1150px;margin:0 auto;padding:0 15px}svg{max-width:18px;max-height:20px}.btn{background:0 0;border:2px solid #9f0023;border-radius:56px;font-weight:500;font-size:16px;text-align:center;padding:16px 27px;display:block;cursor:pointer}.more::after{position:absolute;border-style:solid;border-width:.15em .15em 0 0;content:'';display:inline-block;height:.45em;right:-23px;top:50%;vertical-align:top;width:.45em;-webkit-transform:rotate(135deg) translateY(80%);transform:rotate(135deg) translateY(80%);cursor:pointer;-webkit-transition:.1s;transition:.1s}.disabled-el,.disabled-item{color:#959595}.disabled-item:hover{color:#959595!important}.disabled-el{border:2px solid #959595!important}.focused{top:-8px!important;font-size:11px!important}.form-alert{padding-top:20px;font-size:18px}._err{border-bottom:1px solid #9f0023!important}.err-msg,.header .menu__subitem:hover{color:#9f0023}.success-msg{color:green}.header{font-weight:700;font-size:20px;line-height:135%;border-bottom:4px solid #373334;padding-bottom:24px}@media (max-width:1240px){.header{padding-bottom:50px}}.header__top{padding-top:52px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:60px}@media (max-width:510px){.header__top{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}}.header__top-btn:hover{border:red 2px solid}.header__top-right{max-width:400px;height:50px}.header__top-phone{margin-right:44px}.header__top-search{margin-top:2px;cursor:pointer}.header__top-search svg{padding-top:2px}.header__bottom{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;position:relative}@media (max-width:1240px){.header__bottom{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.header__menu{-webkit-transition:all 2.3s;transition:all 2.3s}.header .menu{z-index:10000}@media (max-width:1240px){.header .menu{height:0;overflow:hidden}}.header .menu__list{display:-webkit-box;display:-ms-flexbox;display:flex}@media (max-width:1240px){.header .menu__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.header .menu__item{margin-right:48px;position:relative}@media (max-width:1400px){.header .menu__item{margin-right:25px}}@media (max-width:1240px){.header .menu__item{padding-bottom:15px}}.header .menu__sublist{display:none;position:absolute;z-index:10000;top:25px;left:0;background:#e5e5e5;padding:15px 18px;border:2px solid #373334}.header .menu__subitem{padding-bottom:15px}.header .menu__item:hover>a .menu__sublist{display:block!important}.header .menu.mob-active{height:auto;overflow:visible}.header .subscribe{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media (max-width:670px){.header .subscribe{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.header .subscribe__text{margin-right:48px}@media (max-width:670px){.header .subscribe__text{padding:15px;margin-right:0}}.header .subscribe__icons,.header .subscribe__icons span svg{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header .subscribe__icons span{height:100%;line-height:16px;padding-right:16px}.header .subscribe__icons span svg{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media (max-width:1240px){.menu__item.more:after{top:30%;right:-20px}}.menu__mob{height:50px;width:70px;position:absolute;left:0;cursor:pointer;display:none}.menu__mob-line{margin-bottom:10px;display:block;height:8px;background:#373334}@media (max-width:1240px){.menu__mob{display:block}}@media (max-width:650px){.menu__mob{width:40px;height:30px}.menu__mob-line{margin-bottom:10px;display:block;height:6px;background:#373334}}.mob-active .menu__mob-line{background:#9f0023}.mob-active .menu__mob-line:first-child{-webkit-transform:rotate(45deg) translateY(12px);transform:rotate(45deg) translateY(12px)}.mob-active .menu__mob-line:nth-child(2){display:none}.mob-active .menu__mob-line:last-child{-webkit-transform:rotate(-45deg) translateY(-12px);transform:rotate(-45deg) translateY(-12px)}@media (max-width:650px){.mob-active .menu__mob-line:first-child{-webkit-transform:rotate(45deg) translateY(11px);transform:rotate(45deg) translateY(11px)}.mob-active .menu__mob-line:last-child{-webkit-transform:rotate(-45deg) translateY(-11px);transform:rotate(-45deg) translateY(-11px)}}.news{padding-top:55px}.news__title{font-weight:700;font-size:70px;line-height:125%;padding-bottom:5px}.news__breadcrumbs{font-weight:400;font-size:16px;line-height:135%;color:#959595;padding-bottom:55px}.news__filter{display:-webkit-box;display:-ms-flexbox;display:flex}@media (max-width:650px){.news__filter{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.news__calendar{position:relative;cursor:pointer;width:468px;height:60px;padding-right:50px;min-width:320px}@media (max-width:650px){.news__calendar{padding-right:0;width:90%;min-width:270px}}.news__calendar input{border:2px solid #373334;padding:0 15px 0 64px;font-family:Frank,Helvetica,Arial,sans-serif;font-weight:400;font-size:16px;line-height:135%;color:#373334;background:#e5e5e5;cursor:pointer}.news__calendar .cal-icon{position:absolute;left:24px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.news__list{padding-top:83px;display:grid;grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(auto,1fr);grid-column-gap:50px;grid-row-gap:80px}@media (max-width:1240px){.news__list{grid-template-columns:repeat(auto-fit,minmax(45%,1fr))}}@media (max-width:650px){.news__list{grid-template-columns:repeat(auto-fit,minmax(98%,1fr))}}.news__item{height:500px;position:relative}.news__item-img{padding-bottom:40px}.news__item-img img{width:100%}.news__item-meta{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:12px}.news__item-tags{color:#9f0023;padding-right:40px}.footer .subscribe__icons span,.news__item-tag{padding-right:20px}.news__item-date{font-weight:400;font-size:12px;line-height:115%;letter-spacing:.05em;text-transform:uppercase;padding-top:3px}.news-details .news h4,.news__item-title{font-weight:500;font-size:20px;line-height:27px;padding-bottom:46px}.news__text{display:none}.news .ext-arrow{position:absolute;bottom:0;left:0;max-width:28px;max-height:28px}.news .wide-anounce{display:-webkit-box;display:-ms-flexbox;display:flex;height:360px;width:100%;grid-column:1/4;background:#fff;padding:48px;position:relative}@media (max-width:1240px){.news .wide-anounce{grid-column:1/3}}@media (max-width:1000px){.news .wide-anounce{height:450px}}@media (max-width:650px){.news .wide-anounce{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:100%;grid-column:1/2}}.news .wide-anounce .news__item-info{width:650px}@media (max-width:650px){.news .wide-anounce .news__item-info{width:300px}}.news .wide-anounce .news__text{display:block;font-weight:300;font-size:16px;line-height:26px;font-family:FrankLight,Helvetica,Arial,sans-serif}.news .wide-anounce .ext-arrow{right:12%;bottom:50px;left:auto}.news .wide-anounce .news__item-img{margin-right:50px}@media (max-width:1240px){.news .wide-anounce .news__item-img{width:50%}}@media (max-width:650px){.news .wide-anounce .news__item-img{width:100%}}.news .news__nav{text-align:center;width:280px;position:relative;padding-top:70px;padding-bottom:3px;margin:0 auto 70px}.news .news__nav-arrow{position:absolute;bottom:-10px;width:14px;height:12px}.news .news__nav-arrow.left{left:0}.news .news__nav-arrow.left svg{fill:#373334}.news .news__nav-arrow.right{right:0}.news .news__nav .inactive{fill:#959595!important}.news .news__nav-number{margin:0 11px;font-weight:700}.news .news__nav-number.active{border-bottom:2px solid #9f0023}.footer{background:#fff;padding-bottom:50px}.footer .subscribe{padding-top:59px;padding-bottom:54px;border-bottom:2px solid #373334;margin-bottom:47px}.footer .subscribe__text{display:block;padding-bottom:20px;font-weight:400;font-size:24px;line-height:115%}.footer__bottom{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;position:relative}@media (max-width:400px){.footer__credits{font-size:11px}}.footer__copyright{display:block}.footer__xpage svg{max-width:74px;max-height:20px;position:absolute;bottom:0;right:0}.news-details{padding-top:55px}.news-details__title{font-weight:700;font-size:54px;line-height:125%;padding-bottom:5px}@media (max-width:650px){.news-details__title{font-size:40px}}.news-details__breadcrumbs{font-weight:400;font-size:16px;line-height:135%;color:#959595;padding-bottom:55px}.news-details__item{height:500px;position:relative}.news-details__item-meta{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:12px}.news-details__item-tags{color:#9f0023;padding-right:40px}.news-details__item-tag{padding-right:20px}.news-details__item-date{font-weight:400;font-size:12px;line-height:115%;letter-spacing:.05em;text-transform:uppercase;padding-top:3px}.news-details .news{padding:43px 0 139px;max-width:985px;border-top:solid 2px #373334}.news-details .news h4{font-weight:700;padding-bottom:30px}.form__wrapper .form .input-wrap span.form__placeholder,.news-details .news p{font-weight:300;font-size:16px;font-family:FrankLight,Helvetica,Arial,sans-serif}.news-details .news p{padding:25px 0 50px;line-height:26px}.news-details .news video,.news__calendar input{width:100%;height:100%}.news-details .news strong{display:block;font-weight:900;padding-top:30px}.news-details .news span{font-weight:300;font-size:14px;line-height:135%;color:#959595}.news-details .news hr{margin:0 0 25px;padding:0;height:0;border:0;border-top:1px solid #333}.news-details .news__meta{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:950px){.news-details .news__meta{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.news-details .news__meta span{color:#373334}.news-details .news__meta-title{display:block;border-bottom:2px solid #373334;padding-bottom:14px;font-family:FrankLight,Helvetica,Arial,sans-serif;font-size:16px;line-height:135%;margin-bottom:15px}.news-details .news__author{width:35%}@media (max-width:950px){.news-details .news__author{width:100%;padding-bottom:20px}}.news-details .news__author-name{font-weight:500;font-size:20px;line-height:27px}.news-details .news__tags{width:35%}@media (max-width:950px){.news-details .news__tags{width:100%;padding-bottom:20px}}.news-details .news__tags-list{font-weight:400;font-size:16px;line-height:135%}.news-details .news__share{width:20%}@media (max-width:950px){.news-details .news__share{width:100%}}.news-details .news__share span{padding-right:16px}.form__wrapper{width:100%;background:#373334;color:#fff}.form__wrapper .form__title{font-weight:700;font-size:52px;line-height:125%;padding:90px 0 50px}@media (max-width:650px){.form__wrapper .form__title{font-size:40px}}.form__wrapper .form{max-width:985px;padding-bottom:108px}.form__wrapper .form .input-wrap{position:relative}@media (max-width:975px){.form__wrapper .form .input-wrap{margin-bottom:25px}}.form__wrapper .form .input-wrap span.form__placeholder{position:absolute;left:0;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);line-height:135%;-webkit-transition:.2s;transition:.2s}.form__wrapper .form input{background:0 0;border-bottom:1px solid #fff;height:40px}.form__wrapper .form input[type=text]{color:#fff;padding:0 10px}.form__wrapper .form__top-line{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-bottom:48px}@media (max-width:975px){.form__wrapper .form__top-line{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.form__wrapper .form__name{width:338px}@media (max-width:975px){.form__wrapper .form__name{width:100%}}.form__wrapper .form__email{width:338px}@media (max-width:975px){.form__wrapper .form__email{width:100%}}.form__wrapper .form__file{position:absolute;z-index:-1;opacity:0;display:block;width:0;height:0}@media (max-width:975px){.form__wrapper .form__file{width:100%}}.form__wrapper .form__file-label{display:-webkit-box;display:-ms-flexbox;display:flex;cursor:pointer}.form__wrapper .form__file-icon{padding-top:2px;padding-right:10px}.form__wrapper .form__file-btn{width:200px;display:block}.form__wrapper .form__comment{width:985px}@media (max-width:975px){.form__wrapper .form__comment{width:100%}}.form__wrapper .form__submit{border:2px solid #fff;border-radius:56px;height:50px;width:160px;color:#fff;margin-top:82px;padding:0}.form__wrapper .form__submit:hover{color:#373334;background:#fff}.air-datepicker--content{color:#373334!important;font-family:Frank,Helvetica,Arial,sans-serif;width:350px}.air-datepicker-body--day-name{padding-bottom:3px;border-bottom:2px solid #373334;padding-right:20px;color:#373334!important}.air-datepicker-cell{font-size:12px;width:25px;height:25px}.air-datepicker-cell.-selected-{background:0 0!important;border:1px solid #373334!important;color:#373334!important;border-radius:20px}.air-datepicker-nav--action svg{padding-top:5px;padding-left:2px;max-width:18px;ax-height:12px}.air-datepicker-nav--action path{fill:#373334!important;stroke-width:0!important}.air-datepicker{width:355px!important;border:2px solid #373334!important;border-radius:0!important}.category{position:relative;z-index:10000;width:469px;height:60px;border:2px solid #373334;min-width:270px}@media (max-width:650px){.category{margin-bottom:25px;width:90%}}.category.is-active .category__body{display:block}.category__header{cursor:pointer;display:-webkit-box;display:-ms-flexbox;display:flex;padding-left:25px}.category__header.more:after{right:30px;-webkit-transform:rotate(135deg) translateY(80%);transform:rotate(135deg) translateY(80%)}.category__current{font-size:16px;padding:8px;line-height:44px}.category__body{border:2px solid #373334;display:none;left:0;position:absolute;right:0;top:100%;background:#e5e5e5;margin:0 -1px;padding-left:25px;height:200px;overflow-x:auto;scrollbar-width:thin;scrollbar-color:#373334}.category__body::-webkit-scrollbar{width:9px}.category__body::-webkit-scrollbar-track{background:#373334}.category__body::-webkit-scrollbar-thumb{background-color:#373334;border-radius:0;border:3px solid #373334}.category__item{cursor:pointer;font-weight:400;font-size:16px;line-height:24px;padding:8px;-webkit-transition:.2s;transition:.2s}.category__item:hover{color:#9f0023}.is-active .more:after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhc3MvX2ZvbnRzLnNjc3MiLCJhcHAuY3NzIiwic2Fzcy9fbWl4aW5zLnNjc3MiLCJzYXNzL19nbG9iYWwuc2FzcyIsInNhc3MvX2VsZW1lbnRzLnNhc3MiLCJzYXNzL3BhcnRpYWxzL19oZWFkZXIuc2FzcyIsInNhc3MvcGFydGlhbHMvX25ld3NfbGlzdC5zYXNzIiwic2Fzcy9wYXJ0aWFscy9fZm9vdGVyLnNhc3MiLCJzYXNzL3BhcnRpYWxzL19uZXdzX2RldGFpbHMuc2FzcyIsInNhc3MvcGFydGlhbHMvX2Zvcm0uc2FzcyIsInNhc3MvcGFydGlhbHMvX2NhbGVuZGFyLnNhc3MiLCJzYXNzL3BhcnRpYWxzL19jYXRlZ29yeS5zYXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBLEFBQUEsV0FDSSx3QixDQUNBLGdDLENBQ0EsZ0ssQ0FHQSxpQixDQUNBLGdCLEFDQ0osV0RJSSxtQixDQUNBLGtDLENBR0Esc0ssQ0FDQSxpQixDQ0pGLGdCQ1FGLEMsQ0FNQSxTLENBT0EsUSxDQU9BLFEsQ0FwQkEsQyxDQTBDQSxNLENBQUEsTyxDQTZCQSw2QixDQzVGQSxxQixDQUdJLE8sQ0Z3QkosTSxDQUNJLFMsQ0FHSixJLENBQ0ksNEMsQ0V4Qkosa0IsQ0FDSSxhLENGNEJKLFUsQ0V4QkksZ0IsQ0FDQSxhLENGMEJBLGUsQ0V4QkosaUIsQ0Y0QkEsMEJFeEJJLFUsQ0Q4QkEsZUMxQkosRSxDQUNJLGUsQ0FDQSxRLENBQ0EsUyxDRitDSixJLENBbEJBLEMsQ0d0Q1Esc0IsQ0FDQSxjLENIcUNSLEMsQ0V6Qkksb0IsQ0FDQSxhLENGK0JKLFEsQ0V6QkksZ0IsQ0YyQkEsYSxDR2pFSixjLENIcUVBLEcsQ0dqRUEsYyxDQUNJLGUsQ0hxRUosSSxDR2pFSSxjLENBQ0Esd0IsQ0FDQSxrQixDQUNBLGUsQ0FDQSxjLENBQ0EsaUIsQ0FBQSxpQixDSG9FQSxhLENHbEVKLGMsQ0h3RUEsWSxDR2pFUSxpQixDQUNBLGtCLENBQ0EsNEIsQ0FDQSxVLENBQ0Esb0IsQ0FDQSxZLENIbUVKLFcsQ0dsRUksTyxDQUNBLGtCLENBQUEsVyxDSHFFSixnRCxDR2pFSix3QyxDQUNJLGMsQ0FESixzQixDQUlRLGMsQ0g0RVIsWSxDQVJBLGMsQ0doRUksYSxDSG9FSixvQixDR2hFSSx1QixDSG9FSixZLENHaEVJLGtDLENIcUVKLFEsQ0doRUEsa0IsQ0FDSSx3QixDSG9FSixXLENBQ0ksZ0IsQ0k3SEosYyxDSmlJQSxLLENJN0hJLHlDLENKaUlKLFEsQ0FpS0EsNEIsQ0FoS0ksYSxDQUdKLFksQ0k5SFEsVyxDSmtJUixPLENBQ0ksZSxDSWpJSSxjLENKbUlKLGdCLENBQ0EsK0IsQ0luSUksbUIsQ0p1SVIsMEJBQ0ksTyxDQUNJLHFCQUlSLFksQ0FDSSxnQixDQUNBLG1CLENJaklJLG1CLENKbUlKLFksQ0kvSEksd0IsQ0ppSUoscUIsQ0FDQSw2QixDQUNBLHdCLENBQ0EscUIsQ0k3SEEsa0IsQ0FDSSxtQixDSmlJUix5QkFDSSxZLENBQ0ksMkIsQ0lqSUEsNkIsQ0hRSixpQyxDR1hBLCtCSjJJSixzQixDQUNJLG9CLENBR0osa0IsQ0FDSSxlLENBQ0EsVyxDQUdKLGtCLENJM0xBLGlCLENKK0xBLG1CLENBQ0ksYyxDQUNBLGMsQ0FHSix1QixDQUNJLGUsQ0FHSixlLENBQ0ksbUIsQ0FDQSxtQixDQUNBLFksQ0FDQSx3QixDQUNBLHFCLENBQ0EsNkIsQ0FDQSxpQixDQUdKLDBCQUNJLGUsQ0k3SVEsMkIsQ0hwQlIsNEIsQ0dsREoseUIsQ0p1TlEscUIsQ0NyS0osdUIsQ0dsREosb0IsQ0owTlEsc0IsQ0kxTlIsd0IsQ0FrRlkscUIsQ0FDQSxvQko4SVosYSxDQUNJLDJCLENBQ0EsbUIsQ0FHSixhLENBQ0ksYSxDQUdKLDBCQUNJLGEsQ0lwSVEsUSxDQXZHWixpQkppUEEsbUIsQ0FDSSxtQixDQUNBLG1CLENDak1BLFksQ0RxTUosMEJBQ0ksbUIsQ0FDSSwyQixDSXpQUiw0QixDQWtIWSx5QixDSGhFUixxQixDR2xESixvQixDSjhQUSxpQixDQUNBLHdCLENJL1BSLHdCLENBd0hZLHFCLENBQUEsb0JKOElaLG1CLENBQ0ksaUIsQ0FDQSxpQixDQUdKLDBCQUNJLG1CLENBQ0ksbUIsQUFJUiwwQkFDSSxtQixDQUNJLHFCQUlSLHNCLENJL0lZLFksQ0FDQSxpQixDSmlKUixhLENJOUlKLFEsQ0FDSSxNLENBQ0Esa0IsQ0FDQSxpQixDQUNBLHdCLENKa0pKLHNCLENJN0lRLG1CLENKcUpSLDBDLENJOUpBLHVCLENKa0tBLHdCLENBQ0ksVyxDQUNBLGdCLENBR0osa0IsQ0kxSUEsbUIsQ0FDSSxtQixDSjRJQSxZLENJMUlKLHdCLENBQ0kscUIsQ0o0SUEsa0IsQ0FHSix5QkFDSSxrQixDSTNJSiwyQixDQUNJLDRCLENKNklJLHlCLENBQ0EsdUJBSVIsd0IsQ0kzSUksaUIsQ0orSUoseUJLelVBLHdCLENBQ0ksWSxDQUVBLGdCTDZVSix5QixDQWVBLGtDLENLdFZJLG1CLENBQ0ksbUIsQ0FDQSxZLENBQ0Esd0IsQ0FDQSxxQixDQUNBLGtCLENMMlVSLDhCLENLeFVRLFcsQ0ppQ0osZ0IsQ0QwU0Esa0IsQ0FHSixrQyxDS3RVUSx1QixDQUNBLG9CLENBQ0Esc0IsQ0xnVlIsMEJBQ0ksc0IsQ0s1VVEsTyxDQUNBLGFMaVZaLFUsQ0FDSSxXLENBQ0EsVSxDQUNBLGlCLENBQ0EsTSxDQUNBLGMsQ0FDQSxZLENBR0osZSxDS3BXSyxrQixDTHNXRCxhLENBQ0EsVSxDQUNBLGtCLENBR0osMEJLMVVRLFUsQ0FDQSxlLEFMK1VSLHlCQ3RWSSxVLENJS0EsVSxDQVNRLFcsQ0w4VVIsZSxDSzFVQSxrQixDQUNJLGEsQ0FDQSxVLENBRUosb0JMOFVKLDJCLENLdlVRLGtCLENMMlVSLHVDLENBQ0ksZ0QsQ0FDQSx3QyxDQUdKLHdDLENLN1VRLFksQ0xpVlIsc0MsQ0szVUksa0QsQ0FDSSwwQyxDTCtVUix5QksxVVEsdUMsQ0FDQSxnRCxDQUNBLHdDLENBSUEsc0MsQ0FDQSxrRCxDQUNBLDRDTDhVUixLLENLdlVRLGdCLENMMlVSLFksQ0t2VVEsZSxDQWpIUixjLENBb0hRLGdCLENBQUEsa0IsQ0wyVVIsa0IsQ0t4VVEsZSxDQUNBLGMsQ0FDQSxnQixDQUNBLGEsQ0p4RUosbUIsQ0RxWkosYSxDQUNJLG1CLENBQ0EsbUIsQ0N2WkEsWSxDRDJaSix5QkFDSSxhLENBQ0ksMkIsQ0szVUksNkIsQ0FDQSxpQyxDQXJJWiw2QixDQXdJWSx3QixDSnRGUixxQixDSWxESixvQkx5ZEEsZSxDQUNJLGlCLENBQ0EsYyxDQUNBLFcsQ0s1ZEosVyxDTDhkSSxrQixDQUNBLGUsQ0FHSix5QkFDSSxlLENLbmVKLGUsQ0xxZVEsUyxDQ25iSixpQkR3YkoscUIsQ0sxVVEsd0IsQ0FHQSxxQixDQUNBLDRDLENBQ0EsZSxDQXJLUixjLENMa2ZJLGdCLENBQ0EsYSxDQUNBLGtCLENBQ0EsYyxDQUdKLHlCLENBQ0ksaUIsQ0t6ZkosUyxDTDJmSSxPLENLM2ZKLGtDLENMNmZJLDBCLENBR0osVyxDS2hnQkEsZ0IsQ0xrZ0JJLFksQ0FDQSxtQyxDTW5nQkosbUMsQ0FDSSxvQixDQUNBLGlCLENOdWdCSiwwQk1qZ0JRLFcsQ0FDQSx3RCxBTnNnQlIseUJBQ0ksVyxDTWhnQlEsd0ROcWdCWixXLENNOWZRLFksQ0FBQSxpQixDTm1nQlIsZSxDTWpnQlEsbUIsQ05xZ0JSLG1CLENNL2ZJLFUsQ05tZ0JKLGdCLENNNWZZLG1CLENBQ0EsbUIsQ0FDQSxZLENBQ0Esc0IsQ044ZlIsbUIsQ092aUJKLDBCLENBQ0ksd0IsQ0FFQSxxQixDQUNJLGtCLENBQ0EsbUIsQ1AwaUJSLGdCLENBQ0ksYSxDQUNBLGtCLENBNEtKLDhCLENBektBLGUsQ090aUJRLGtCLENQMGlCUixnQixDT3BpQlEsZSxDQUNBLGMsQ0FHSixnQixDQUNJLG9CLENBQUEsd0IsQ0FBQSxlLENQdXlCUixzQixDQS9QQSxpQixDT3RpQlEsZSxDUHdpQkosYyxDQUNBLGdCLENPeGlCSSxtQixDUDRpQlIsVyxDT3JpQkksWSxDUHlpQkosZ0IsQ09uaUJRLGlCLENBQ0EsUSxDQUNBLE0sQ0FDQSxjLENBQ0EsZSxDUHVpQlIsbUIsQ09saUJRLG1CLENBbERSLG1CLENQdWxCSSxZLENBQ0EsWSxDQUNBLFUsQ0FDQSxlLENPMWxCSixlLENQNGxCSSxZLENBQ0EsaUIsQ0FHSiwwQk9obUJBLG1CLENBa0VZLGlCLEFQb2lCWiwwQkFDSSxtQixDT3ZtQkosYyxBUDRtQkEseUJPNW1CQSxtQixDQWlGWSwyQixDQUNBLDRCLENBQ0EseUIsQ0FDQSxxQixDQUNBLFcsQ0FyRlosaUJQdW5CQSxvQyxDQUNJLFcsQ0FHSix5QkFDSSxvQyxDQUNJLGFBSVIsK0IsQ0FDSSxhLENBQ0EsZSxDQUNBLGMsQ0FDQSxnQixDQUNBLGlELENBR0osOEIsQ096b0JBLFMsQ1Ayb0JJLFcsQ0FDQSxTLENBR0osbUMsQ0FDSSxpQixDQUdKLDBCT25wQkEsbUMsQ0F3SFksVyxBUGlpQloseUJBQ0ksbUMsQ081aEJZLFlQaWlCaEIsZ0IsQ0FDSSxpQixDQUNBLFcsQ0FFQSxpQixDQUNBLGdCLENBQ0Esa0IsQ1FycUJKLGtCLENSeXFCQSxzQixDUXpxQkEsaUIsQ0FPUSxZLENBQ0EsVSxDQUNBLFcsQ1J1cUJSLDJCLENBQ0ksTSxDQUdKLCtCLENRcHJCQSxZLENSd3JCQSw0QixDQUNJLE8sQ0FHSiwwQixDQUNJLHNCLENBR0osdUIsQ0FDSSxhLENBQ0EsZSxDQUdKLDhCLENRcnNCQSwrQixDUnlzQkEsTyxDQUNJLGUsQ0FDQSxtQixDQUdKLGtCLENBQ0ksZ0IsQ0FDQSxtQixDQUNBLCtCLENBQ0Esa0IsQ0FHSix3QixDQUNJLGEsQ0FDQSxtQixDQUNBLGUsQ0FDQSxjLENBQ0EsZ0IsQ0FPSixlLENBQ0ksbUIsQ0FDQSxtQixDQUNBLFksQ1FwdUJKLHdCLENSc3VCSSxxQixDQUNBLDZCLENBQ0EsaUIsQ0FHSix5QkFDSSxnQixDUTV1QkosZ0JSaXZCQSxrQixDQUNJLGEsQ0FHSixrQixDQUNJLGMsQ0FDQSxlLENBQ0EsaUIsQ0FDQSxRLENRenZCSixPLENSNnZCQSxhLENBQ0ksZ0IsQ0FHSixvQixDQUNJLGUsQ0FDQSxjLENBQ0EsZ0IsQ0FDQSxrQixDQUdKLHlCQUNJLG9CLENBQ0ksZ0JBSVIsMEIsQ0FDSSxlLENTMXdCSixjLENBQ0ksZ0IsQ0FDQSxhLENBQ0EsbUIsQ1Q4d0JKLG1CLENBQ0ksWSxDUzF3QkosaUIsQ1Q4d0JBLHdCLENBQ0ksbUIsQ1Mxd0JKLG1CLENBQ0ksWSxDQUNBLHNCLENBQ0EsbUIsQ0FDQSwwQixDVDR3QkEsd0IsQ1Mxd0JKLHFCLENBRVEsa0IsQ0FDQSxtQixDVDZ3QlIsd0IsQ1N6d0JBLGEsQ0FDSSxrQixDQUdKLHVCLENBQ0ksa0IsQ1Q2d0JKLHdCLENVanpCQSxlLENBQ0ksYyxDQUNBLGdCLENBQ0Esb0IsQ0FDQSx3QixDQUNBLGUsQ1ZxekJKLG1CLENBQ0ksb0IsQ0FDQSxlLENVNXpCSiw0QixDVmcwQkEsc0IsQ1UveUJRLGUsQ0FDQSxtQixDVnk4QlIsdUQsQ0FwSkEscUIsQ0EwSkksZSxDQUNBLGMsQ0FFQSxpRCxDQTdKSixxQixDQUNJLG1CLENVN3lCSSxnQixDVm96QlIseUIsQ0FyV0EscUIsQ1V4Y1EsVSxDQUNBLFcsQ1ZpekJSLDBCLENVN3lCUSxhLENBQ0EsZSxDQUNBLGdCLENWaXpCUix3QixDVTN6QkssZSxDVjZ6QkQsYyxDVTd6QkMsZ0IsQ1YrekJELGEsQ0FHSixzQixDQUNJLGUsQ1V6eUJBLFMsQ0FDSSxRLENBQ0EsUSxDQUNBLHlCLENWNnlCUix5QixDVXp5QlEsbUIsQ0FBQSxtQixDQVBILFksQ1ZvekJELHdCLENBQ0EscUIsQ1V6eUJKLDZCLENWNnlCQSx5QkFDSSx5QixDQUNJLDJCLENBQ0EsNEIsQ0FDQSx5QixDQUNBLHVCQUlSLDhCLENBQ0ksYSxDQUdKLCtCLENBQ0ksYSxDQUNBLCtCLENBQ0EsbUIsQ0FDQSxpRCxDQUNBLGMsQ0FDQSxnQixDQUNBLGtCLENBR0osMkIsQ0FDSSxTLENBR0oseUJBQ0ksMkIsQ0FDSSxVLENBQ0EscUJBSVIsZ0MsQ0FDSSxlLENBQ0EsYyxDQUNBLGdCLENBR0oseUIsQ0FDSSxTLENBR0oseUJBQ0kseUIsQ0FDSSxVLENBQ0EscUJBSVIsOEIsQ0FDSSxlLENBQ0EsYyxDQUNBLGdCLENBR0osMEIsQ0FDSSxTLENBR0oseUJBQ0ksMEIsQ0FDSSxZQUlSLCtCLENBQ0ksa0IsQ0FHSixjLENBQ0ksVSxDQUNBLGtCLENBQ0EsVSxDQUdKLDJCLENBQ0ksZSxDQUNBLGMsQ0FDQSxnQixDQUNBLG1CLENBR0oseUJBQ0ksMkIsQ0FDSSxnQkFJUixvQixDQUNJLGUsQ0FDQSxvQixDQUdKLGdDLENBQ0ksaUIsQ0FHSix5QkFDSSxnQyxDQUNJLG9CQUlSLHVELENBQ0ksaUIsQ0FDQSxNLENBQ0EsTyxDQUNBLGtDLENBQ0EsMEIsQ0FHQSxnQixDQUVBLHNCLENBQ0EsYyxDQUdKLDBCLENBQ0ksYyxDQUNBLDRCLENBQ0EsVyxDQUdKLHFDLENBQ0ksVSxDQUNBLGMsQ0FHSiw4QixDQUNJLG1CLENBQ0EsbUIsQ0FDQSxZLENBQ0Esd0IsQ0FDQSxxQixDQUNBLDZCLENBQ0EsbUIsQ0FHSix5QkFDSSw4QixDQUNJLDJCLENBQ0EsNEIsQ0FDQSx5QixDQUNBLHVCQUlSLDBCLENBQ0ksVyxDQUdKLHlCQUNJLDBCLENBQ0ksWUFJUiwyQixDQUNJLFcsQ0FHSix5QkFDSSwyQixDQUNJLFlBSVIsMEIsQ0FDSSxpQixDQUNBLFUsQ0FDQSxTLENBQ0EsYSxDQUNBLE8sQ0FDQSxRLENBR0oseUJBQ0ksMEIsQ0FDSSxZQUlSLGdDLENBQ0ksbUIsQ0FDQSxtQixDQUNBLFksQ0FDQSxjLENBR0osK0IsQ0FDSSxlLENBQ0Esa0IsQ0FHSiw4QixDQUNJLFcsQ0FDQSxhLENBR0osNkIsQ0FDSSxXLENBR0oseUJBQ0ksNkIsQ0FDSSxZQUlSLDRCLENBQ0kscUIsQ0FDQSxrQixDQUNBLFcsQ0FDQSxXLENBQ0EsVSxDQUNBLGUsQ0FDQSxTLENBR0osa0MsQ0FDSSxhLENBQ0EsZSxDQUdKLHdCLENBQ0ksdUIsQ0FDQSw0QyxDQUNBLFcsQ0FHSiw4QixDQUNJLGtCLENBQ0EsK0IsQ0FDQSxrQixDQUlBLHVCLENBR0osb0IsQ0FDSSxjLENBQ0EsVSxDQUNBLFcsQ0FHSiwrQixDQUNJLHdCLENBQ0Esa0MsQ0FDQSx1QixDQUNBLGtCLENBR0osK0IsQ0FDSSxlLENBQ0EsZ0IsQ0FDQSxjLENBQ0EsYyxDQUdKLGdDLENBQ0ksc0IsQ0FDQSx3QixDQUdKLGUsQ0FDSSxxQixDQUNBLGtDLENBQ0EseUIsQ0FHSixTLENBQ0ksaUIsQ0FDQSxhLENBQ0EsVyxDQUNBLFcsQ0FDQSx3QixDQUNBLGUsQ0FHSix5QkFDSSxTLENBQ0ksa0IsQ0FDQSxXQUlSLG1DLENBQ0ksYSxDQUdKLGlCLENBQ0ksYyxDQUNBLG1CLENBQ0EsbUIsQ0FDQSxZLENBQ0EsaUIsQ0FHSiw0QixDQUNJLFUsQ0FDQSxnRCxDQUNBLHdDLENBR0osa0IsQ0FDSSxjLENBQ0EsVyxDQUNBLGdCLENBR0osZSxDQUNJLHdCLENBQ0EsWSxDQUNBLE0sQ0FDQSxpQixDQUNBLE8sQ0FDQSxRLENBQ0Esa0IsQ0FDQSxhLENBQ0EsaUIsQ0FDQSxZLENBQ0EsZSxDQUNBLG9CLENBQ0EsdUIsQ0FHSixrQyxDQUNJLFMsQ0FHSix3QyxDQUNJLGtCLENBR0osd0MsQ0FDSSx3QixDQUNBLGUsQ0FDQSx3QixDQUdKLGUsQ0FDSSxjLENBQ0EsZSxDQUNBLGMsQ0FFQSxnQixDQUNBLFcsQ0FDQSxzQixDQUNBLGMsQ0FHSixxQixDQUNJLGEsQ0FHSixzQixDQUNJLGdDLENBQ0Esd0IiLCJmaWxlIjoiYXBwLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAZm9udC1mYWNlIHsgXHJcbiAgICBmb250LWZhbWlseTogXCJGcmFua0xpZ2h0XCI7XHJcbiAgICBzcmM6IHVybChcIi4uL2ZvbnRzL0ZyYW5rTGlnaHQuZW90XCIpO1xyXG4gICAgc3JjOiB1cmwoXCIuLi9mb250cy9GcmFua0xpZ2h0LmVvdD8jaWVmaXhcIilmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSxcclxuICAgIHVybChcIi4uL2ZvbnRzL0ZyYW5rTGlnaHQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLFxyXG4gICAgdXJsKFwiLi4vZm9udHMvRnJhbmtMaWdodC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHsgXHJcbiAgICBmb250LWZhbWlseTogXCJGcmFua1wiO1xyXG4gICAgc3JjOiB1cmwoXCIuLi9mb250cy9GcmFua1JlZ3VsYXIuZW90XCIpO1xyXG4gICAgc3JjOiB1cmwoXCIuLi9mb250cy9GcmFua1JlZ3VsYXIuZW90PyNpZWZpeFwiKWZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLFxyXG4gICAgdXJsKFwiLi4vZm9udHMvRnJhbmtSZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSxcclxuICAgIHVybChcIi4uL2ZvbnRzL0ZyYW5rUmVndWxhci50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG59XHJcbiIsIkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiBcIkZyYW5rTGlnaHRcIjtcbiAgICBzcmM6IHVybChcIi4uL2ZvbnRzL0ZyYW5rTGlnaHQuZW90XCIpO1xuICAgIHNyYzogdXJsKFwiLi4vZm9udHMvRnJhbmtMaWdodC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9GcmFua0xpZ2h0LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvRnJhbmtMaWdodC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiBcIkZyYW5rXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvRnJhbmtSZWd1bGFyLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9GcmFua1JlZ3VsYXIuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvRnJhbmtSZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvRnJhbmtSZWd1bGFyLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG4qIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBib3JkZXI6IDA7XG59XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKjpmb2N1cywgKjphY3RpdmUge1xuICAgIG91dGxpbmU6IG5vbmU7XG59XG5cbmJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiBGcmFuaywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICBiYWNrZ3JvdW5kOiAjRTVFNUU1O1xuICAgIGNvbG9yOiAjMzczMzM0O1xufVxuXG4uY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDE1MDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtaW4td2lkdGg6IDMzMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDE2MDBweCkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgICBtYXJnaW46IDAgMjBweDtcbiAgICB9XG59XG5cbnVsIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG5hIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuMnM7XG4gICAgdHJhbnNpdGlvbjogLjJzO1xufVxuXG4ud3JhcHBlciB7XG4gICAgbWF4LXdpZHRoOiAxMTUwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogMCAxNXB4IDA7XG59XG5cbnN2ZyB7XG4gICAgbWF4LXdpZHRoOiAxOHB4O1xuICAgIG1heC1oZWlnaHQ6IDIwcHg7XG59XG5cbi5idG4ge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICM5RjAwMjM7XG4gICAgYm9yZGVyLXJhZGl1czogNTZweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMTZweCAyN3B4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4ycztcbiAgICB0cmFuc2l0aW9uOiAuMnM7XG59XG5cbi5tb3JlOjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLXdpZHRoOiAwLjE1ZW0gMC4xNWVtIDAgMDtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgaGVpZ2h0OiAwLjQ1ZW07XG4gICAgcmlnaHQ6IC0yM3B4O1xuICAgIHRvcDogNTAlO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgd2lkdGg6IDAuNDVlbTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDEzNWRlZykgdHJhbnNsYXRlWSg4MCUpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZykgdHJhbnNsYXRlWSg4MCUpO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4xcztcbiAgICB0cmFuc2l0aW9uOiAuMXM7XG59XG5cbi5kaXNhYmxlZC1pdGVtIHtcbiAgICBjb2xvcjogIzk1OTU5NTtcbn1cblxuLmRpc2FibGVkLWl0ZW06aG92ZXIge1xuICAgIGNvbG9yOiAjOTU5NTk1ICFpbXBvcnRhbnQ7XG59XG5cbi5kaXNhYmxlZC1lbCB7XG4gICAgYm9yZGVyOiAycHggc29saWQgIzk1OTU5NSAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjOTU5NTk1O1xufVxuXG4uZm9jdXNlZCB7XG4gICAgdG9wOiAtOHB4ICFpbXBvcnRhbnQ7XG4gICAgZm9udC1zaXplOiAxMXB4ICFpbXBvcnRhbnQ7XG59XG5cbi5mb3JtLWFsZXJ0IHtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG59XG5cbi5fZXJyIHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzlGMDAyMyAhaW1wb3J0YW50O1xufVxuXG4uZXJyLW1zZyB7XG4gICAgY29sb3I6ICM5RjAwMjM7XG59XG5cbi5zdWNjZXNzLW1zZyB7XG4gICAgY29sb3I6IGdyZWVuO1xufVxuXG4uaGVhZGVyIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMTM1JTtcbiAgICBib3JkZXItYm90dG9tOiA0cHggc29saWQgIzM3MzMzNDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMjRweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyNDBweCkge1xuICAgIC5oZWFkZXIge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcbiAgICB9XG59XG5cbi5oZWFkZXJfX3RvcCB7XG4gICAgcGFkZGluZy10b3A6IDUycHg7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmctYm90dG9tOiA2MHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTEwcHgpIHtcbiAgICAuaGVhZGVyX190b3Age1xuICAgICAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgICAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IHJldmVyc2U7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICB9XG59XG5cbi5oZWFkZXJfX3RvcC1idG46aG92ZXIge1xuICAgIGJvcmRlcjogI2ZmMDAwMCAycHggc29saWQ7XG59XG5cbi5oZWFkZXJfX3RvcC1yaWdodCB7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG59XG5cbi5oZWFkZXJfX3RvcC1waG9uZSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA0NHB4O1xufVxuXG4uaGVhZGVyX190b3Atc2VhcmNoIHtcbiAgICBtYXJnaW4tdG9wOiAycHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uaGVhZGVyX190b3Atc2VhcmNoIHN2ZyB7XG4gICAgcGFkZGluZy10b3A6IDJweDtcbn1cblxuLmhlYWRlcl9fYm90dG9tIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTI0MHB4KSB7XG4gICAgLmhlYWRlcl9fYm90dG9tIHtcbiAgICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAgICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxufVxuXG4uaGVhZGVyX19tZW51IHtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAyLjNzO1xuICAgIHRyYW5zaXRpb246IGFsbCAyLjNzO1xufVxuXG4uaGVhZGVyIC5tZW51IHtcbiAgICB6LWluZGV4OiAxMDAwMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyNDBweCkge1xuICAgIC5oZWFkZXIgLm1lbnUge1xuICAgICAgICBoZWlnaHQ6IDBweDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG59XG5cbi5oZWFkZXIgLm1lbnVfX2xpc3Qge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMjQwcHgpIHtcbiAgICAuaGVhZGVyIC5tZW51X19saXN0IHtcbiAgICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAgICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAtd2Via2l0LWJveC1wYWNrOiBlbmQ7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG59XG5cbi5oZWFkZXIgLm1lbnVfX2l0ZW0ge1xuICAgIG1hcmdpbi1yaWdodDogNDhweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxNDAwcHgpIHtcbiAgICAuaGVhZGVyIC5tZW51X19pdGVtIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyNDBweCkge1xuICAgIC5oZWFkZXIgLm1lbnVfX2l0ZW0ge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTVweDtcbiAgICB9XG59XG5cbi5oZWFkZXIgLm1lbnVfX3N1Ymxpc3Qge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDEwMDAwO1xuICAgIHRvcDogMjVweDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQ6ICNlNWU1ZTU7XG4gICAgcGFkZGluZzogMTVweCAxOHB4O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICMzNzMzMzQ7XG59XG5cbi5oZWFkZXIgLm1lbnVfX3N1Yml0ZW0ge1xuICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xufVxuXG4uaGVhZGVyIC5tZW51X19zdWJpdGVtOmhvdmVyIHtcbiAgICBjb2xvcjogIzlGMDAyMztcbn1cblxuLmhlYWRlciAubWVudV9faXRlbTpob3ZlciA+IGEgLm1lbnVfX3N1Ymxpc3Qge1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG59XG5cbi5oZWFkZXIgLm1lbnUubW9iLWFjdGl2ZSB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4uaGVhZGVyIC5zdWJzY3JpYmUge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2NzBweCkge1xuICAgIC5oZWFkZXIgLnN1YnNjcmliZSB7XG4gICAgICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG59XG5cbi5oZWFkZXIgLnN1YnNjcmliZV9fdGV4dCB7XG4gICAgbWFyZ2luLXJpZ2h0OiA0OHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjcwcHgpIHtcbiAgICAuaGVhZGVyIC5zdWJzY3JpYmVfX3RleHQge1xuICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgfVxufVxuXG4uaGVhZGVyIC5zdWJzY3JpYmVfX2ljb25zIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uaGVhZGVyIC5zdWJzY3JpYmVfX2ljb25zIHNwYW4ge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNnB4O1xufVxuXG4uaGVhZGVyIC5zdWJzY3JpYmVfX2ljb25zIHNwYW4gc3ZnIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMjQwcHgpIHtcbiAgICAubWVudV9faXRlbS5tb3JlOmFmdGVyIHtcbiAgICAgICAgdG9wOiAzMCU7XG4gICAgICAgIHJpZ2h0OiAtMjBweDtcbiAgICB9XG59XG5cbi5tZW51X19tb2Ige1xuICAgIGhlaWdodDogNTBweDtcbiAgICB3aWR0aDogNzBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLm1lbnVfX21vYi1saW5lIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogOHB4O1xuICAgIGJhY2tncm91bmQ6ICMzNzMzMzQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMjQwcHgpIHtcbiAgICAubWVudV9fbW9iIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcbiAgICAubWVudV9fbW9iIHtcbiAgICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICAgIGhlaWdodDogMzBweDtcbiAgICB9XG5cbiAgICAubWVudV9fbW9iLWxpbmUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgaGVpZ2h0OiA2cHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICMzNzMzMzQ7XG4gICAgfVxufVxuXG4ubW9iLWFjdGl2ZSAubWVudV9fbW9iLWxpbmUge1xuICAgIGJhY2tncm91bmQ6ICM5RjAwMjM7XG59XG5cbi5tb2ItYWN0aXZlIC5tZW51X19tb2ItbGluZTpmaXJzdC1jaGlsZCB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlWSgxMnB4KTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlWSgxMnB4KTtcbn1cblxuLm1vYi1hY3RpdmUgLm1lbnVfX21vYi1saW5lOm50aC1jaGlsZCgyKSB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLm1vYi1hY3RpdmUgLm1lbnVfX21vYi1saW5lOmxhc3QtY2hpbGQge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGVZKC0xMnB4KTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZVkoLTEycHgpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcbiAgICAubW9iLWFjdGl2ZSAubWVudV9fbW9iLWxpbmU6Zmlyc3QtY2hpbGQge1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGVZKDExcHgpO1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlWSgxMXB4KTtcbiAgICB9XG5cbiAgICAubW9iLWFjdGl2ZSAubWVudV9fbW9iLWxpbmU6bGFzdC1jaGlsZCB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGVZKC0xMXB4KTtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGVZKC0xMXB4KTtcbiAgICB9XG59XG5cbi5uZXdzIHtcbiAgICBwYWRkaW5nLXRvcDogNTVweDtcbn1cblxuLm5ld3NfX3RpdGxlIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDcwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDEyNSU7XG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcbn1cblxuLm5ld3NfX2JyZWFkY3J1bWJzIHtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMTM1JTtcbiAgICBjb2xvcjogIzk1OTU5NTtcbiAgICBwYWRkaW5nLWJvdHRvbTogNTVweDtcbn1cblxuLm5ld3NfX2ZpbHRlciB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gICAgLm5ld3NfX2ZpbHRlciB7XG4gICAgICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogcmV2ZXJzZTtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuICAgICAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbn1cblxuLm5ld3NfX2NhbGVuZGFyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHdpZHRoOiA0NjhweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgcGFkZGluZy1yaWdodDogNTBweDtcbiAgICBtaW4td2lkdGg6IDMyMHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcbiAgICAubmV3c19fY2FsZW5kYXIge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICBtaW4td2lkdGg6IDI3MHB4O1xuICAgIH1cbn1cblxuLm5ld3NfX2NhbGVuZGFyIGlucHV0IHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjMzczMzM0O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwYWRkaW5nOiAwIDE1cHggMCA2NHB4O1xuICAgIGZvbnQtZmFtaWx5OiBGcmFuaywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMTM1JTtcbiAgICBjb2xvcjogIzM3MzMzNDtcbiAgICBiYWNrZ3JvdW5kOiAjRTVFNUU1O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLm5ld3NfX2NhbGVuZGFyIC5jYWwtaWNvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDI0cHg7XG4gICAgdG9wOiA1MCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4ubmV3c19fbGlzdCB7XG4gICAgcGFkZGluZy10b3A6IDgzcHg7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KGF1dG8sIDFmcik7XG4gICAgZ3JpZC1jb2x1bW4tZ2FwOiA1MHB4O1xuICAgIGdyaWQtcm93LWdhcDogODBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyNDBweCkge1xuICAgIC5uZXdzX19saXN0IHtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCg0NSUsIDFmcikpO1xuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gICAgLm5ld3NfX2xpc3Qge1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDk4JSwgMWZyKSk7XG4gICAgfVxufVxuXG4ubmV3c19faXRlbSB7XG4gICAgaGVpZ2h0OiA1MDBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5uZXdzX19pdGVtLWltZyB7XG4gICAgcGFkZGluZy1ib3R0b206IDQwcHg7XG59XG5cbi5uZXdzX19pdGVtLWltZyBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4ubmV3c19faXRlbS1tZXRhIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbn1cblxuLm5ld3NfX2l0ZW0tdGFncyB7XG4gICAgY29sb3I6ICM5RjAwMjM7XG4gICAgcGFkZGluZy1yaWdodDogNDBweDtcbn1cblxuLm5ld3NfX2l0ZW0tdGFnIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xufVxuXG4ubmV3c19faXRlbS1kYXRlIHtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTE1JTtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wNWVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgcGFkZGluZy10b3A6IDNweDtcbn1cblxuLm5ld3NfX2l0ZW0tdGl0bGUge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyN3B4O1xuICAgIHBhZGRpbmctYm90dG9tOiA0NnB4O1xufVxuXG4ubmV3c19fdGV4dCB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLm5ld3MgLmV4dC1hcnJvdyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIG1heC13aWR0aDogMjhweDtcbiAgICBtYXgtaGVpZ2h0OiAyOHB4O1xufVxuXG4ubmV3cyAud2lkZS1hbm91bmNlIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGhlaWdodDogMzYwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgIHBhZGRpbmc6IDQ4cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTI0MHB4KSB7XG4gICAgLm5ld3MgLndpZGUtYW5vdW5jZSB7XG4gICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gICAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gICAgLm5ld3MgLndpZGUtYW5vdW5jZSB7XG4gICAgICAgIGhlaWdodDogNDUwcHg7XG4gICAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcbiAgICAubmV3cyAud2lkZS1hbm91bmNlIHtcbiAgICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAgICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgfVxufVxuXG4ubmV3cyAud2lkZS1hbm91bmNlIC5uZXdzX19pdGVtLWluZm8ge1xuICAgIHdpZHRoOiA2NTBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gICAgLm5ld3MgLndpZGUtYW5vdW5jZSAubmV3c19faXRlbS1pbmZvIHtcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xuICAgIH1cbn1cblxuLm5ld3MgLndpZGUtYW5vdW5jZSAubmV3c19fdGV4dCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDI2cHg7XG4gICAgZm9udC1mYW1pbHk6IEZyYW5rTGlnaHQsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG59XG5cbi5uZXdzIC53aWRlLWFub3VuY2UgLmV4dC1hcnJvdyB7XG4gICAgcmlnaHQ6IDEyJTtcbiAgICBib3R0b206IDUwcHg7XG4gICAgbGVmdDogYXV0bztcbn1cblxuLm5ld3MgLndpZGUtYW5vdW5jZSAubmV3c19faXRlbS1pbWcge1xuICAgIG1hcmdpbi1yaWdodDogNTBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEyNDBweCkge1xuICAgIC5uZXdzIC53aWRlLWFub3VuY2UgLm5ld3NfX2l0ZW0taW1nIHtcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xuICAgIC5uZXdzIC53aWRlLWFub3VuY2UgLm5ld3NfX2l0ZW0taW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxufVxuXG4ubmV3cyAubmV3c19fbmF2IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDI4MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nLXRvcDogNzBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogM3B4O1xuICAgIG1hcmdpbi1ib3R0b206IDcwcHg7XG59XG5cbi5uZXdzIC5uZXdzX19uYXYtYXJyb3cge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IC0xMHB4O1xuICAgIHdpZHRoOiAxNHB4O1xuICAgIGhlaWdodDogMTJweDtcbn1cblxuLm5ld3MgLm5ld3NfX25hdi1hcnJvdy5sZWZ0IHtcbiAgICBsZWZ0OiAwO1xufVxuXG4ubmV3cyAubmV3c19fbmF2LWFycm93LmxlZnQgc3ZnIHtcbiAgICBmaWxsOiAjMzczMzM0O1xufVxuXG4ubmV3cyAubmV3c19fbmF2LWFycm93LnJpZ2h0IHtcbiAgICByaWdodDogMDtcbn1cblxuLm5ld3MgLm5ld3NfX25hdiAuaW5hY3RpdmUge1xuICAgIGZpbGw6ICM5NTk1OTUgIWltcG9ydGFudDtcbn1cblxuLm5ld3MgLm5ld3NfX25hdi1udW1iZXIge1xuICAgIG1hcmdpbjogMCAxMXB4O1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5uZXdzIC5uZXdzX19uYXYtbnVtYmVyLmFjdGl2ZSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM5RjAwMjM7XG59XG5cbi5mb290ZXIge1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgcGFkZGluZy1ib3R0b206IDUwcHg7XG59XG5cbi5mb290ZXIgLnN1YnNjcmliZSB7XG4gICAgcGFkZGluZy10b3A6IDU5cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDU0cHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMzNzMzMzQ7XG4gICAgbWFyZ2luLWJvdHRvbTogNDdweDtcbn1cblxuLmZvb3RlciAuc3Vic2NyaWJlX190ZXh0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBsaW5lLWhlaWdodDogMTE1JTtcbn1cblxuLmZvb3RlciAuc3Vic2NyaWJlX19pY29ucyBzcGFuIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xufVxuXG4uZm9vdGVyX19ib3R0b20ge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCkge1xuICAgIC5mb290ZXJfX2NyZWRpdHMge1xuICAgICAgICBmb250LXNpemU6IDExcHg7XG4gICAgfVxufVxuXG4uZm9vdGVyX19jb3B5cmlnaHQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZm9vdGVyX194cGFnZSBzdmcge1xuICAgIG1heC13aWR0aDogNzRweDtcbiAgICBtYXgtaGVpZ2h0OiAyMHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG59XG5cbi5uZXdzLWRldGFpbHMge1xuICAgIHBhZGRpbmctdG9wOiA1NXB4O1xufVxuXG4ubmV3cy1kZXRhaWxzX190aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiA1NHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMjUlO1xuICAgIHBhZGRpbmctYm90dG9tOiA1cHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xuICAgIC5uZXdzLWRldGFpbHNfX3RpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgIH1cbn1cblxuLm5ld3MtZGV0YWlsc19fYnJlYWRjcnVtYnMge1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMzUlO1xuICAgIGNvbG9yOiAjOTU5NTk1O1xuICAgIHBhZGRpbmctYm90dG9tOiA1NXB4O1xufVxuXG4ubmV3cy1kZXRhaWxzX19pdGVtIHtcbiAgICBoZWlnaHQ6IDUwMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLm5ld3MtZGV0YWlsc19faXRlbS1tZXRhIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcbn1cblxuLm5ld3MtZGV0YWlsc19faXRlbS10YWdzIHtcbiAgICBjb2xvcjogIzlGMDAyMztcbiAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xufVxuXG4ubmV3cy1kZXRhaWxzX19pdGVtLXRhZyB7XG4gICAgcGFkZGluZy1yaWdodDogMjBweDtcbn1cblxuLm5ld3MtZGV0YWlsc19faXRlbS1kYXRlIHtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBsaW5lLWhlaWdodDogMTE1JTtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wNWVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgcGFkZGluZy10b3A6IDNweDtcbn1cblxuLm5ld3MtZGV0YWlscyAubmV3cyB7XG4gICAgcGFkZGluZzogNDNweCAwIDEzOXB4IDA7XG4gICAgbWF4LXdpZHRoOiA5ODVweDtcbiAgICBib3JkZXItdG9wOiBzb2xpZCAycHggIzM3MzMzNDtcbn1cblxuLm5ld3MtZGV0YWlscyAubmV3cyBoNCB7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDMwcHg7XG59XG5cbi5uZXdzLWRldGFpbHMgLm5ld3MgcCB7XG4gICAgcGFkZGluZzogMjVweCAwIDUwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDI2cHg7XG4gICAgZm9udC1mYW1pbHk6IEZyYW5rTGlnaHQsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG59XG5cbi5uZXdzLWRldGFpbHMgLm5ld3MgdmlkZW8ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLm5ld3MtZGV0YWlscyAubmV3cyBzdHJvbmcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgcGFkZGluZy10b3A6IDMwcHg7XG59XG5cbi5uZXdzLWRldGFpbHMgLm5ld3Mgc3BhbiB7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEzNSU7XG4gICAgY29sb3I6ICM5NTk1OTU7XG59XG5cbi5uZXdzLWRldGFpbHMgLm5ld3MgaHIge1xuICAgIG1hcmdpbjogMCAwIDI1cHg7XG4gICAgcGFkZGluZzogMDtcbiAgICBoZWlnaHQ6IDA7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMzMzO1xufVxuXG4ubmV3cy1kZXRhaWxzIC5uZXdzX19tZXRhIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5NTBweCkge1xuICAgIC5uZXdzLWRldGFpbHMgLm5ld3NfX21ldGEge1xuICAgICAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgICAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxufVxuXG4ubmV3cy1kZXRhaWxzIC5uZXdzX19tZXRhIHNwYW4ge1xuICAgIGNvbG9yOiAjMzczMzM0O1xufVxuXG4ubmV3cy1kZXRhaWxzIC5uZXdzX19tZXRhLXRpdGxlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzM3MzMzNDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTRweDtcbiAgICBmb250LWZhbWlseTogRnJhbmtMaWdodCwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEzNSU7XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cblxuLm5ld3MtZGV0YWlscyAubmV3c19fYXV0aG9yIHtcbiAgICB3aWR0aDogMzUlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTUwcHgpIHtcbiAgICAubmV3cy1kZXRhaWxzIC5uZXdzX19hdXRob3Ige1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gICAgfVxufVxuXG4ubmV3cy1kZXRhaWxzIC5uZXdzX19hdXRob3ItbmFtZSB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XG59XG5cbi5uZXdzLWRldGFpbHMgLm5ld3NfX3RhZ3Mge1xuICAgIHdpZHRoOiAzNSU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5NTBweCkge1xuICAgIC5uZXdzLWRldGFpbHMgLm5ld3NfX3RhZ3Mge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gICAgfVxufVxuXG4ubmV3cy1kZXRhaWxzIC5uZXdzX190YWdzLWxpc3Qge1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMzUlO1xufVxuXG4ubmV3cy1kZXRhaWxzIC5uZXdzX19zaGFyZSB7XG4gICAgd2lkdGg6IDIwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk1MHB4KSB7XG4gICAgLm5ld3MtZGV0YWlscyAubmV3c19fc2hhcmUge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG59XG5cbi5uZXdzLWRldGFpbHMgLm5ld3NfX3NoYXJlIHNwYW4ge1xuICAgIHBhZGRpbmctcmlnaHQ6IDE2cHg7XG59XG5cbi5mb3JtX193cmFwcGVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiAjMzczMzM0O1xuICAgIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4uZm9ybV9fd3JhcHBlciAuZm9ybV9fdGl0bGUge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgZm9udC1zaXplOiA1MnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMjUlO1xuICAgIHBhZGRpbmc6IDkwcHggMCA1MHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcbiAgICAuZm9ybV9fd3JhcHBlciAuZm9ybV9fdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgfVxufVxuXG4uZm9ybV9fd3JhcHBlciAuZm9ybSB7XG4gICAgbWF4LXdpZHRoOiA5ODVweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTA4cHg7XG59XG5cbi5mb3JtX193cmFwcGVyIC5mb3JtIC5pbnB1dC13cmFwIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5NzVweCkge1xuICAgIC5mb3JtX193cmFwcGVyIC5mb3JtIC5pbnB1dC13cmFwIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcbiAgICB9XG59XG5cbi5mb3JtX193cmFwcGVyIC5mb3JtIC5pbnB1dC13cmFwIHNwYW4uZm9ybV9fcGxhY2Vob2xkZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogNTAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMTM1JTtcbiAgICBmb250LWZhbWlseTogRnJhbmtMaWdodCwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4ycztcbiAgICB0cmFuc2l0aW9uOiAuMnM7XG59XG5cbi5mb3JtX193cmFwcGVyIC5mb3JtIGlucHV0IHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0ZGRkZGRjtcbiAgICBoZWlnaHQ6IDQwcHg7XG59XG5cbi5mb3JtX193cmFwcGVyIC5mb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdIHtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG59XG5cbi5mb3JtX193cmFwcGVyIC5mb3JtX190b3AtbGluZSB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBhZGRpbmctYm90dG9tOiA0OHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTc1cHgpIHtcbiAgICAuZm9ybV9fd3JhcHBlciAuZm9ybV9fdG9wLWxpbmUge1xuICAgICAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgICAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxufVxuXG4uZm9ybV9fd3JhcHBlciAuZm9ybV9fbmFtZSB7XG4gICAgd2lkdGg6IDMzOHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTc1cHgpIHtcbiAgICAuZm9ybV9fd3JhcHBlciAuZm9ybV9fbmFtZSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbn1cblxuLmZvcm1fX3dyYXBwZXIgLmZvcm1fX2VtYWlsIHtcbiAgICB3aWR0aDogMzM4cHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5NzVweCkge1xuICAgIC5mb3JtX193cmFwcGVyIC5mb3JtX19lbWFpbCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbn1cblxuLmZvcm1fX3dyYXBwZXIgLmZvcm1fX2ZpbGUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAtMTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk3NXB4KSB7XG4gICAgLmZvcm1fX3dyYXBwZXIgLmZvcm1fX2ZpbGUge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG59XG5cbi5mb3JtX193cmFwcGVyIC5mb3JtX19maWxlLWxhYmVsIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmZvcm1fX3dyYXBwZXIgLmZvcm1fX2ZpbGUtaWNvbiB7XG4gICAgcGFkZGluZy10b3A6IDJweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xufVxuXG4uZm9ybV9fd3JhcHBlciAuZm9ybV9fZmlsZS1idG4ge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmZvcm1fX3dyYXBwZXIgLmZvcm1fX2NvbW1lbnQge1xuICAgIHdpZHRoOiA5ODVweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk3NXB4KSB7XG4gICAgLmZvcm1fX3dyYXBwZXIgLmZvcm1fX2NvbW1lbnQge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG59XG5cbi5mb3JtX193cmFwcGVyIC5mb3JtX19zdWJtaXQge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICNGRkZGRkY7XG4gICAgYm9yZGVyLXJhZGl1czogNTZweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgd2lkdGg6IDE2MHB4O1xuICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgIG1hcmdpbi10b3A6IDgycHg7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLmZvcm1fX3dyYXBwZXIgLmZvcm1fX3N1Ym1pdDpob3ZlciB7XG4gICAgY29sb3I6ICMzNzMzMzQ7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblxuLmFpci1kYXRlcGlja2VyLS1jb250ZW50IHtcbiAgICBjb2xvcjogIzM3MzMzNCAhaW1wb3J0YW50O1xuICAgIGZvbnQtZmFtaWx5OiBGcmFuaywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICB3aWR0aDogMzUwcHg7XG59XG5cbi5haXItZGF0ZXBpY2tlci1ib2R5LS1kYXktbmFtZSB7XG4gICAgcGFkZGluZy1ib3R0b206IDNweDtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzM3MzMzNDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xufVxuXG4uYWlyLWRhdGVwaWNrZXItYm9keS0tZGF5LW5hbWUge1xuICAgIGNvbG9yOiAjMzczMzM0ICFpbXBvcnRhbnQ7XG59XG5cbi5haXItZGF0ZXBpY2tlci1jZWxsIHtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgd2lkdGg6IDI1cHg7XG4gICAgaGVpZ2h0OiAyNXB4O1xufVxuXG4uYWlyLWRhdGVwaWNrZXItY2VsbC4tc2VsZWN0ZWQtIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMzNzMzMzQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzM3MzMzNCAhaW1wb3J0YW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG5cbi5haXItZGF0ZXBpY2tlci1uYXYtLWFjdGlvbiBzdmcge1xuICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAycHg7XG4gICAgbWF4LXdpZHRoOiAxOHB4O1xuICAgIGF4LWhlaWdodDogMTJweDtcbn1cblxuLmFpci1kYXRlcGlja2VyLW5hdi0tYWN0aW9uIHBhdGgge1xuICAgIGZpbGw6ICMzNzMzMzQgIWltcG9ydGFudDtcbiAgICBzdHJva2Utd2lkdGg6IDBweCAhaW1wb3J0YW50O1xufVxuXG4uYWlyLWRhdGVwaWNrZXIge1xuICAgIHdpZHRoOiAzNTVweCAhaW1wb3J0YW50O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICMzNzMzMzQgIWltcG9ydGFudDtcbiAgICBib3JkZXItcmFkaXVzOiAwcHggIWltcG9ydGFudDtcbn1cblxuLmNhdGVnb3J5IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTAwMDA7XG4gICAgd2lkdGg6IDQ2OXB4O1xuICAgIGhlaWdodDogNjBweDtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjMzczMzM0O1xuICAgIG1pbi13aWR0aDogMjcwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xuICAgIC5jYXRlZ29yeSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gICAgICAgIHdpZHRoOiA5MCU7XG4gICAgfVxufVxuXG4uY2F0ZWdvcnkuaXMtYWN0aXZlIC5jYXRlZ29yeV9fYm9keSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5jYXRlZ29yeV9faGVhZGVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLWxlZnQ6IDI1cHg7XG59XG5cbi5jYXRlZ29yeV9faGVhZGVyLm1vcmU6YWZ0ZXIge1xuICAgIHJpZ2h0OiAzMHB4O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKSB0cmFuc2xhdGVZKDgwJSk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKSB0cmFuc2xhdGVZKDgwJSk7XG59XG5cbi5jYXRlZ29yeV9fY3VycmVudCB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIHBhZGRpbmc6IDhweDtcbiAgICBsaW5lLWhlaWdodDogNDRweDtcbn1cblxuLmNhdGVnb3J5X19ib2R5IHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjMzczMzM0O1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgbGVmdDogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICNFNUU1RTU7XG4gICAgbWFyZ2luOiAwIC0xcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAyNXB4O1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICBzY3JvbGxiYXItd2lkdGg6IHRoaW47XG4gICAgc2Nyb2xsYmFyLWNvbG9yOiAjMzczMzM0O1xufVxuXG4uY2F0ZWdvcnlfX2JvZHk6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICB3aWR0aDogOXB4O1xufVxuXG4uY2F0ZWdvcnlfX2JvZHk6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcbiAgICBiYWNrZ3JvdW5kOiAjMzczMzM0O1xufVxuXG4uY2F0ZWdvcnlfX2JvZHk6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzczMzM0O1xuICAgIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgICBib3JkZXI6IDNweCBzb2xpZCAjMzczMzM0O1xufVxuXG4uY2F0ZWdvcnlfX2l0ZW0ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMTM1JTtcbiAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuMnM7XG4gICAgdHJhbnNpdGlvbjogLjJzO1xufVxuXG4uY2F0ZWdvcnlfX2l0ZW06aG92ZXIge1xuICAgIGNvbG9yOiAjOUYwMDIzO1xufVxuXG4uaXMtYWN0aXZlIC5tb3JlOmFmdGVyIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbn1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbk5oYzNNdlgyWnZiblJ6TG5OamMzTWlMQ0p6WVhOekwxOXRhWGhwYm5NdWMyTnpjeUlzSW5OaGMzTXZYMmRzYjJKaGJDNXpZWE56SWl3aWMyRnpjeTlmZG1GeWFXRmliR1Z6TG5OaGMzTWlMQ0p6WVhOekwxOWxiR1Z0Wlc1MGN5NXpZWE56SWl3aWMyRnpjeTl3WVhKMGFXRnNjeTlmYUdWaFpHVnlMbk5oYzNNaUxDSnpZWE56TDNCaGNuUnBZV3h6TDE5dVpYZHpYMnhwYzNRdWMyRnpjeUlzSW5OaGMzTXZjR0Z5ZEdsaGJITXZYMlp2YjNSbGNpNXpZWE56SWl3aWMyRnpjeTl3WVhKMGFXRnNjeTlmYm1WM2MxOWtaWFJoYVd4ekxuTmhjM01pTENKellYTnpMM0JoY25ScFlXeHpMMTltYjNKdExuTmhjM01pTENKellYTnpMM0JoY25ScFlXeHpMMTlqWVd4bGJtUmhjaTV6WVhOeklpd2ljMkZ6Y3k5d1lYSjBhV0ZzY3k5ZlkyRjBaV2R2Y25rdWMyRnpjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVR0RlFVTkpMSGxDUVVGNVFqdEZRVU42UWl4dFEwRkJiVU03UlVGRGJrTXNlVXRCUldsRU8wVkJRMnBFTEd0Q1FVRnJRanRGUVVOc1FpeG5Ra0ZCWjBJc1JVRkJRVHM3UVVGSGNFSTdSVUZEU1N4dlFrRkJiMEk3UlVGRGNFSXNjVU5CUVhGRE8wVkJRM0pETEN0TFFVVnRSRHRGUVVOdVJDeHJRa0ZCYTBJN1JVRkRiRUlzWjBKQlFXZENMRVZCUVVFN08wRkRhRUp3UWl3clFrRkJRVHRCUVdGQkxEQkRRVUZCTzBGQlQwRXNkME5CUVVFN1FVRk5RU3d3UTBGQlFUdEJRVTlCTEdkRFFVRkJPMEZCVDBFc1lVRkJRVHRCUVU5QkxHbERRVUZCTzBGQlQwRXNhVU5CUVVFN1FVRlJRU3g1UWtGQlFUdEJRVFpDUVN3MlFrRkJRVHRCUXpWR1FUdEZRVU5KTEZWQlFWVTdSVUZEVml4VFFVRlRPMFZCUTFRc1UwRkJVeXhGUVVGQk96dEJRVVZpTzBWQlEwa3NPRUpCUVhOQ08xVkJRWFJDTEhOQ1FVRnpRaXhGUVVGQk96dEJRVVV4UWp0RlFVTkpMR0ZCUVdFc1JVRkJRVHM3UVVGRmFrSTdSVUZEU1N4blJFRkJaMFE3UlVGRGFFUXNiVUpCUVcxQ08wVkJRMjVDTEdORFdsY3NSVUZCUVRzN1FVUmpaanRGUVVOSkxHbENRVUZwUWp0RlFVTnFRaXhqUVVGak8wVkJRMlFzWjBKQlFXZENPMFZCUTJoQ0xHdENRVUZyUWl4RlFVRkJPMFZFT0VKc1FqdEpRMnhEU2p0TlFVOVJMR05CUVdNc1JVRkJRU3hGUVVGTE96dEJRVU16UWp0RlFVTkpMR2RDUVVGblFqdEZRVU5vUWl4VFFVRlRPMFZCUTFRc1ZVRkJWU3hGUVVGQk96dEJRVVZrTzBWQlEwa3NjVUpCUVhGQ08wVkJRM0pDTEdOQlFXTTdSVUZEWkN4MVFrRkJaVHRGUVVGbUxHVkJRV1VzUlVGQlFUczdRVUZIYmtJN1JVRkRTU3hwUWtGQmFVSTdSVUZEYWtJc1kwRkJZenRGUVVOa0xHbENRVUZwUWl4RlFVRkJPenRCUlhSRGNrSTdSVUZEU1N4bFFVRmxPMFZCUTJZc1owSkJRV2RDTEVWQlFVRTdPMEZCUlhCQ08wVkJRMGtzZFVKQlFYVkNPMFZCUTNaQ0xIbENSRXhUTzBWRFRWUXNiVUpCUVcxQ08wVkJRMjVDTEdkQ1FVRm5RanRGUVVOb1FpeGxRVUZsTzBWQlEyWXNhMEpCUVd0Q08wVkJRMnhDTEd0Q1FVRnJRanRGUVVOc1FpeGpRVUZqTzBWQlEyUXNaVUZCWlR0RlFVTm1MSFZDUVVGbE8wVkJRV1lzWlVGQlpTeEZRVUZCT3p0QlFVVnVRanRGUVVWUkxHdENRVUZyUWp0RlFVTnNRaXh0UWtGQmJVSTdSVUZEYmtJc0swSkJRU3RDTzBWQlF5OUNMRmRCUVZjN1JVRkRXQ3h4UWtGQmNVSTdSVUZEY2tJc1kwRkJZenRGUVVOa0xGbEJRVms3UlVGRFdpeFJRVUZSTzBWQlExSXNiVUpCUVcxQ08wVkJRMjVDTEdGQlFXRTdSVUZEWWl4cFJFRkJlVU03VlVGQmVrTXNlVU5CUVhsRE8wVkJRM3BETEdWQlFXVTdSVUZEWml4MVFrRkJaVHRGUVVGbUxHVkJRV1VzUlVGQlFUczdRVUZKZGtJN1JVRkRTU3hqUkdoRFowSXNSVUZCUVR0RlF5dENjRUk3U1VGSlVTeDVRa0ZCTmtJc1JVRkJRVHM3UVVGRmNrTTdSVUZEU1N4dlEwRkJkME03UlVGRGVFTXNZMFIyUTJkQ0xFVkJRVUU3TzBGRGVVTndRanRGUVVOSkxHOUNRVUZ2UWp0RlFVTndRaXd3UWtGQk1FSXNSVUZCUVRzN1FVRkZPVUk3UlVGRFNTeHBRa0ZCYVVJN1JVRkRha0lzWlVGQlpTeEZRVUZCT3p0QlFVVnVRanRGUVVOSkxESkRRVUYzUXl4RlFVRkJPenRCUVVVMVF6dEZRVU5KTEdORWRrUlRMRVZCUVVFN08wRkRlVVJpTzBWQlEwa3NXVUZCV1N4RlFVRkJPenRCUXpORWFFSTdSVUZEU1N4blFrRkJaMEk3UlVGRGFFSXNaVUZCWlR0RlFVTm1MR2xDUVVGcFFqdEZRVU5xUWl4blEwWkdWenRGUlVkWUxHOUNRVUZ2UWl4RlFVRkJPMFZLTmtOd1FqdEpTV3hFU2p0TlFVOVJMRzlDUVVGdlFpeEZRVUZCTEVWQk5FZ3dRanRGUVRGSWJFUTdTVUZEU1N4cFFrRkJhVUk3U1VGRGFrSXNiMEpCUVdFN1NVRkJZaXh2UWtGQllUdEpRVUZpTEdGQlFXRTdTVUZEWWl4NVFrRkJPRUk3VVVGQk9VSXNjMEpCUVRoQ08xbEJRVGxDTERoQ1FVRTRRanRKUVVNNVFpeDVRa0ZCYlVJN1VVRkJia0lzYzBKQlFXMUNPMWxCUVc1Q0xHMUNRVUZ0UWp0SlFVTnVRaXh2UWtGQmIwSXNSVUZCUVR0SlNtOURlRUk3VFVsNlEwRTdVVUZSVVN3MFFrRkJPRUk3VVVGQk9VSXNPRUpCUVRoQ08xbEJRVGxDTEd0RFFVRTRRanRuUWtGQk9VSXNPRUpCUVRoQ0xFVkJRVUVzUlVGdFFrZzdTVUZxUWpsQ08wMUJSVThzZVVKQlFYbENMRVZCUVVFN1NVRkhha003VFVGRFNTeG5Ra0ZCWjBJN1RVRkRhRUlzV1VGQldTeEZRVUZCTzBsQlJXaENPMDFCUTBrc2EwSkJRV3RDTEVWQlFVRTdTVUZIZEVJN1RVRkRTU3hsUVVGbE8wMUJRMllzWlVGQlpTeEZRVUZCTzAxQlJteENPMUZCU1U4c1owSkJRV2RDTEVWQlFVRTdSVUZITlVJN1NVRkRTU3h2UWtGQllUdEpRVUZpTEc5Q1FVRmhPMGxCUVdJc1lVRkJZVHRKUVVOaUxIbENRVUU0UWp0UlFVRTVRaXh6UWtGQk9FSTdXVUZCT1VJc09FSkJRVGhDTzBsQlF6bENMR3RDUVVGclFpeEZRVUZCTzBsS1VYUkNPMDFKV0VFN1VVRk5VU3cwUWtGQmMwSTdVVUZCZEVJc05rSkJRWE5DTzFsQlFYUkNMREJDUVVGelFqdG5Ra0ZCZEVJc2MwSkJRWE5DTzFGQlEzUkNMSGRDUVVGMVFqdFpRVUYyUWl4eFFrRkJkVUk3WjBKQlFYWkNMSFZDUVVGMVFqdFJRVU4yUWl4NVFrRkJiVUk3V1VGQmJrSXNjMEpCUVcxQ08yZENRVUZ1UWl4dFFrRkJiVUlzUlVGQlFTeEZRVUZMTzBWQlJXaERPMGxCUTBrc05FSkJRVzlDTzBsQlFYQkNMRzlDUVVGdlFpeEZRVUZCTzBWQmJFUTFRanRKUVc5RVVTeGpRVUZqTEVWQlFVRTdTVXBHYkVJN1RVbHNSRW83VVVGM1JGa3NWMEZCVnp0UlFVTllMR2RDUVVGblFpeEZRVUZCTEVWQk9FTk5PMGxCZGtkc1F6dE5RVFJFV1N4dlFrRkJZVHROUVVGaUxHOUNRVUZoTzAxQlFXSXNZVUZCWVN4RlFVRkJPMDFLVm5KQ08xRkpiRVJLTzFWQkswUm5RaXcwUWtGQmMwSTdWVUZCZEVJc05rSkJRWE5DTzJOQlFYUkNMREJDUVVGelFqdHJRa0ZCZEVJc2MwSkJRWE5DTzFWQlEzUkNMSEZDUVVGNVFqdGpRVUY2UWl4clFrRkJlVUk3YTBKQlFYcENMSGxDUVVGNVFqdFZRVU42UWl4NVFrRkJiVUk3WTBGQmJrSXNjMEpCUVcxQ08ydENRVUZ1UWl4dFFrRkJiVUlzUlVGQlFTeEZRVUZMTzBsQmFrVjRRenROUVhGRldTeHJRa0ZCYTBJN1RVRkRiRUlzYTBKQlFXdENMRVZCUVVFN1RVcHdRakZDTzFGSmJFUktPMVZCZVVWblFpeHJRa0ZCYTBJc1JVRkJRU3hGUVVWUE8wMUtla0p5UXp0UlNXeEVTanRWUVRKRlowSXNiMEpCUVc5Q0xFVkJRVUVzUlVGQlN6dEpRVE5GZWtNN1RVRnJSbGtzWVVGQllUdE5RVU5pTEd0Q1FVRnJRanROUVVOc1FpeGpRVUZqTzAxQlEyUXNVMEZCVXp0TlFVTlVMRTlCUVU4N1RVRkRVQ3h0UWtGQmJVSTdUVUZEYmtJc2EwSkJRV3RDTzAxQlEyeENMSGxDUm5aR1J5eEZRVUZCTzBsRlJtWTdUVUUwUmxrc2IwSkJRVzlDTEVWQlFVRTdUVUUxUm1oRE8xRkJLMFpuUWl4alJqbEdTQ3hGUVVGQk8wbEZSR0k3VFVGclIyZENMSGxDUVVGNVFpeEZRVUZCTzBsQmJFZDZRenROUVhOSFdTeFpRVUZaTzAxQlExb3NhVUpCUVdsQ0xFVkJRVUU3UlVGMlJ6ZENPMGxCTWtkUkxHOUNRVUZoTzBsQlFXSXNiMEpCUVdFN1NVRkJZaXhoUVVGaE8wbEJRMklzZVVKQlFXMUNPMUZCUVc1Q0xITkNRVUZ0UWp0WlFVRnVRaXh0UWtGQmJVSXNSVUZCUVR0SlNqRkVka0k3VFVsc1JFbzdVVUVyUjFrc05FSkJRWE5DTzFGQlFYUkNMRFpDUVVGelFqdFpRVUYwUWl3d1FrRkJjMEk3WjBKQlFYUkNMSE5DUVVGelFpeEZRVUZCTEVWQmIwSnJRanRKUVc1SmNFUTdUVUZyU0Zrc2EwSkJRV3RDTEVWQlFVRTdUVXBvUlRGQ08xRkpiRVJLTzFWQmIwaG5RaXhoUVVGaE8xVkJRMklzWlVGQlpTeEZRVUZCTEVWQlFVczdTVUZ5U0hCRE8wMUJkMGhaTEc5Q1FVRmhPMDFCUVdJc2IwSkJRV0U3VFVGQllpeGhRVUZoTzAxQlEySXNlVUpCUVcxQ08xVkJRVzVDTEhOQ1FVRnRRanRqUVVGdVFpeHRRa0ZCYlVJc1JVRkJRVHROUVhwSUwwSTdVVUUwU0dkQ0xGbEJRVms3VVVGRFdpeHBRa0ZCYVVJN1VVRkRha0lzYlVKQlFXMUNMRVZCUVVFN1VVRTVTRzVETzFWQmFVbHZRaXh2UWtGQllUdFZRVUZpTEc5Q1FVRmhPMVZCUVdJc1lVRkJZVHRWUVVOaUxIbENRVUZ0UWp0alFVRnVRaXh6UWtGQmJVSTdhMEpCUVc1Q0xHMUNRVUZ0UWp0VlFVTnVRaXgzUWtGQmRVSTdZMEZCZGtJc2NVSkJRWFZDTzJ0Q1FVRjJRaXgxUWtGQmRVSXNSVUZCUVRzN1FVcHFSblpETzBWSmJVWktPMGxCUjFrc1VVRkJVVHRKUVVOU0xGbEJRVmtzUlVGQlFTeEZRVUZMT3p0QlFVYzNRanRGUVVOSkxGbEJRVms3UlVGRFdpeFhRVUZYTzBWQlExZ3NhMEpCUVd0Q08wVkJRMnhDTEU5QlFVODdSVUZEVUN4bFFVRmxPMFZCUTJZc1lVRkJZU3hGUVVGQk8wVkJSV0k3U1VGRFNTeHRRa0ZCYlVJN1NVRkRia0lzWTBGQll6dEpRVU5rTEZkQlFWYzdTVUZEV0N4dFFrWjBTazhzUlVGQlFUdEZSbWRFV0R0SlNUQkdTanROUVdWUkxHTkJRV01zUlVGQlFTeEZRVlZsTzBWS2JraHFRenRKU1RCR1NqdE5RV3RDVVN4WFFVRlhPMDFCUTFnc1dVRkJXU3hGUVVGQk8wMUJSVm83VVVGRFNTeHRRa0ZCYlVJN1VVRkRia0lzWTBGQll6dFJRVU5rTEZkQlFWYzdVVUZEV0N4dFFrWnVTMGNzUlVGQlFTeEZSVzFMYTBJN08wRkJTV3BETzBWQlEwa3NiVUpHZWt0VExFVkJRVUU3TzBGRk1rdGlPMFZCUTBrc2FVUkJRWGxETzFWQlFYcERMSGxEUVVGNVF5eEZRVUZCT3p0QlFVVTNRenRGUVVOSkxHRkJRV0VzUlVGQlFUczdRVUZGYWtJN1JVRkRTU3h0UkVGQk1rTTdWVUZCTTBNc01rTkJRVEpETEVWQlFVRTdPMEZLYWtrelF6dEZTWEZKUVR0SlFVTkpMR2xFUVVGNVF6dFpRVUY2UXl4NVEwRkJlVU1zUlVGQlFUdEZRVVUzUXp0SlFVTkpMRzFFUVVFeVF6dFpRVUV6UXl3eVEwRkJNa01zUlVGQlFTeEZRVUZIT3p0QlF6Tk1kRVE3UlVGRFNTeHBRa0ZCYVVJc1JVRkJRVHRGUVVWcVFqdEpRVU5KTEdsQ1FVRnBRanRKUVVOcVFpeGxRVUZsTzBsQlEyWXNhVUpCUVdsQ08wbEJRMnBDTEcxQ1FVRnRRaXhGUVVGQk8wVkJSWFpDTzBsQlEwa3NaMEpCUVdkQ08wbEJRMmhDTEdWQlFXVTdTVUZEWml4cFFrRkJhVUk3U1VGRGFrSXNZMGhXV1R0SlIxZGFMRzlDUVVGdlFpeEZRVUZCTzBWQlJYaENPMGxCUTBrc2IwSkJRV0U3U1VGQllpeHZRa0ZCWVR0SlFVRmlMR0ZCUVdFc1JVRkJRVHRKVEdsRGFrSTdUVXRzUTBFN1VVRkpVU3cwUWtGQk9FSTdVVUZCT1VJc09FSkJRVGhDTzFsQlFUbENMR3REUVVFNFFqdG5Ra0ZCT1VJc09FSkJRVGhDTzFGQlF6bENMSGxDUVVGdFFqdFpRVUZ1UWl4elFrRkJiVUk3WjBKQlFXNUNMRzFDUVVGdFFpeEZRVUZCTEVWQlFVczdSVUZGYUVNN1NVRkRTU3hyUWtGQmEwSTdTVUZEYkVJc1pVRkJaVHRKUVVObUxGbEJRVms3U1VGRFdpeFpRVUZaTzBsQlExb3NiVUpCUVcxQ08wbEJRMjVDTEdkQ1FVRm5RaXhGUVVGQk8wbE1jVUp3UWp0TlN6TkNRVHRSUVZOUkxHZENRVUZuUWp0UlFVTm9RaXhWUVVGVk8xRkJRMVlzWjBKQlFXZENMRVZCUVVFc1JVRnBRbWRDTzBsQk5VSjJRenROUVdGUExIbENRVUY1UWp0TlFVTjZRaXhYUVVGWE8wMUJRMWdzV1VGQldUdE5RVU5hTEhOQ1FVRnpRanROUVVOMFFpeG5SRUZCWjBRN1RVRkRhRVFzWjBKQlFXZENPMDFCUTJoQ0xHVkJRV1U3VFVGRFppeHBRa0ZCYVVJN1RVRkRha0lzWTBneFEwYzdUVWN5UTBnc2JVSkJRVzFDTzAxQlEyNUNMR1ZCUVdVc1JVRkJRVHRKUVhaQ2RFSTdUVUY1UWs4c2EwSkJRV3RDTzAxQlEyeENMRlZCUVZVN1RVRkRWaXhSUVVGUk8wMUJRMUlzYlVOQlFUSkNPMk5CUVROQ0xESkNRVUV5UWl4RlFVRkJPMFZCU1c1RE8wbEJRMGtzYVVKQlFXbENPMGxCUTJwQ0xHRkJRV0U3U1VGRFlpeHhRMEZCY1VNN1NVRkRja01zY1VOQlFYRkRPMGxCUTNKRExIRkNRVUZ4UWp0SlFVTnlRaXhyUWtGQmEwSXNSVUZCUVR0SlRGaDBRanROUzB0Qk8xRkJVMUVzZVVSQlFYbEVMRVZCUVVFc1JVRkhTenRKVEdwQ2RFVTdUVXRMUVR0UlFWbFJMSGxFUVVGNVJDeEZRVUZCTEVWQlFVczdSVUZEZEVVN1NVRkRTU3hoUVVGaE8wbEJRMklzYTBKQlFXdENMRVZCUVVFN1JVRkZkRUk3U1VGRFNTeHZRa0ZCYjBJc1JVRkJRVHRKUVVSMlFqdE5RVWxQTEZkQlFWY3NSVUZCUVR0RlFVVnVRanRKUVVOSkxHOUNRVUZoTzBsQlFXSXNiMEpCUVdFN1NVRkJZaXhoUVVGaE8wbEJRMklzZFVKQlFUSkNPMUZCUVROQ0xHOUNRVUV5UWp0WlFVRXpRaXd5UWtGQk1rSTdTVUZETTBJc2VVSkJRVzFDTzFGQlFXNUNMSE5DUVVGdFFqdFpRVUZ1UWl4dFFrRkJiVUk3U1VGRGJrSXNiMEpCUVc5Q0xFVkJRVUU3UlVGRmVFSTdTVUZEU1N4alNIQkdTenRKUjNGR1RDeHRRa0ZCYlVJc1JVRkJRVHRGUVVWMlFqdEpRVU5KTEcxQ1FVRnRRaXhGUVVGQk8wVkJSWFpDTzBsQlEwa3NaMEpCUVdkQ08wbEJRMmhDTEdWQlFXVTdTVUZEWml4cFFrRkJhVUk3U1VGRGFrSXNjMEpCUVhOQ08wbEJRM1JDTEhsQ1FVRjVRanRKUVVONlFpeG5Ra0ZCWjBJc1JVRkJRVHRGUVVWd1FqdEpRVU5KTEdkQ1FVRm5RanRKUVVOb1FpeGxRVUZsTzBsQlEyWXNhVUpCUVdsQ08wbEJRMnBDTEc5Q1FVRnZRaXhGUVVGQk8wVkJSWGhDTzBsQlEwa3NZVUZCWVN4RlFVRkJPMFZCTVVkeVFqdEpRVFpIVVN4clFrRkJhMEk3U1VGRGJFSXNVMEZCVXp0SlFVTlVMRTlCUVU4N1NVRkRVQ3hsUVVGbE8wbEJRMllzWjBKQlFXZENMRVZCUVVFN1JVRnFTSGhDTzBsQmIwaFJMRzlDUVVGaE8wbEJRV0lzYjBKQlFXRTdTVUZCWWl4aFFVRmhPMGxCUTJJc1lVRkJZVHRKUVVOaUxGZEJRVmM3U1VGRFdDeG5Ra0ZCWjBJN1NVRkRhRUlzYlVKQlFXMUNPMGxCUTI1Q0xHRkJRV0U3U1VGRFlpeHJRa0ZCYTBJc1JVRkJRVHRKVEhoRmRFSTdUVXRzUkVvN1VVRTJTRmtzWjBKQlFXZENMRVZCUVVFc1JVRm5RMDA3U1V3elJ6bENPMDFMYkVSS08xRkJaMGxaTEdGQlFXRXNSVUZCUVN4RlFUWkNVenRKVEROSE9VSTdUVXRzUkVvN1VVRnRTVmtzTkVKQlFYTkNPMUZCUVhSQ0xEWkNRVUZ6UWp0WlFVRjBRaXd3UWtGQmMwSTdaMEpCUVhSQ0xITkNRVUZ6UWp0UlFVTjBRaXhaUVVGWk8xRkJRMW9zWjBKQlFXZENMRVZCUVVFc1JVRjNRazA3U1VFM1NteERPMDFCZDBsWkxGbEJRVmtzUlVGQlFUdE5USFJHY0VJN1VVdHNSRW83VlVFd1NXZENMRmxCUVZrc1JVRkJRU3hGUVVGTE8wbEJNVWxxUXp0TlFUWkpXU3hqUVVGak8wMUJRMlFzWjBKQlFXZENPMDFCUTJoQ0xHVkJRV1U3VFVGRFppeHBRa0ZCYVVJN1RVRkRha0lzY1VSQlFYRkVMRVZCUVVFN1NVRnFTbXBGTzAxQmIwcFpMRlZCUVZVN1RVRkRWaXhaUVVGWk8wMUJRMW9zVlVGQlZTeEZRVUZCTzBsQmRFcDBRanROUVhsS1dTeHJRa0ZCYTBJc1JVRkJRVHROVEhaSE1VSTdVVXRzUkVvN1ZVRXlTbWRDTEZWQlFWVXNSVUZCUVN4RlFVVk5PMDFNTTBjMVFqdFJTMnhFU2p0VlFUWktaMElzVjBGQlZ5eEZRVUZCTEVWQlFVczdSVUUzU21oRE8wbEJLMHBSTEd0Q1FVRnJRanRKUVVOc1FpeFpRVUZaTzBsQlExb3NZMEZCWXp0SlFVTmtMR3RDUVVGclFqdEpRVU5zUWl4cFFrRkJhVUk3U1VGRGFrSXNiVUpCUVcxQ08wbEJRMjVDTEcxQ1FVRnRRaXhGUVVGQk8wbEJja3N6UWp0TlFYZExXU3hyUWtGQmEwSTdUVUZEYkVJc1lVRkJZVHROUVVOaUxGZEJRVmM3VFVGRFdDeFpRVUZaTEVWQlFVRTdTVUV6UzNoQ08wMUJPRXRaTEU5QlFVOHNSVUZCUVR0TlFUbExia0k3VVVGblRHZENMR0ZJT1V0RUxFVkJRVUU3U1VkR1pqdE5RVzFNV1N4UlFVRlJMRVZCUVVFN1NVRnVUSEJDTzAxQmMweFpMSGRDUVVFMFFpeEZRVUZCTzBsQmRFeDRRenROUVRKTVdTeGpRVUZqTzAxQlEyUXNaMEpCUVdkQ0xFVkJRVUU3U1VFMVREVkNPMDFCSzB4WkxHZERTRGxNUXl4RlFVRkJPenRCU1VSaU8wVkJRMGtzYlVKQlFXMUNPMFZCUTI1Q0xHOUNRVUZ2UWl4RlFVRkJPMFZCUm5oQ08wbEJUVkVzYVVKQlFXbENPMGxCUTJwQ0xHOUNRVUZ2UWp0SlFVTndRaXhuUTBwT1R6dEpTVTlRTEcxQ1FVRnRRaXhGUVVGQk8wbEJWRE5DTzAxQldWa3NZMEZCWXp0TlFVTmtMRzlDUVVGdlFqdE5RVU53UWl4blFrRkJaMEk3VFVGRGFFSXNaVUZCWlR0TlFVTm1MR2xDUVVGcFFpeEZRVUZCTzBsQmFFSTNRanROUVc5Q1owSXNiVUpCUVcxQ0xFVkJRVUU3UlVGRkwwSTdTVUZEU1N4dlFrRkJZVHRKUVVGaUxHOUNRVUZoTzBsQlFXSXNZVUZCWVR0SlFVTmlMSGxDUVVFNFFqdFJRVUU1UWl4elFrRkJPRUk3V1VGQk9VSXNPRUpCUVRoQ08wbEJRemxDTEd0Q1FVRnJRaXhGUVVGQk8wVk9lVUowUWp0SlRYWkNRVHROUVVWUkxHVkJRV1VzUlVGQlFTeEZRVUZMTzBWQlJUVkNPMGxCUTBrc1kwRkJZeXhGUVVGQk8wVkJSMnBDTzBsQlJVOHNaVUZCWlR0SlFVTm1MR2RDUVVGblFqdEpRVU5vUWl4clFrRkJhMEk3U1VGRGJFSXNVMEZCVXp0SlFVTlVMRkZCUVZFc1JVRkJRVHM3UVVONlEzQkNPMFZCUTBrc2FVSkJRV2xDTEVWQlFVRTdSVUZGYWtJN1NVRkRTU3hwUWtGQmFVSTdTVUZEYWtJc1pVRkJaVHRKUVVObUxHbENRVUZwUWp0SlFVTnFRaXh0UWtGQmJVSXNSVUZCUVR0SlVESkRka0k3VFU4dlEwRTdVVUZOVVN4bFFVRmxMRVZCUVVFc1JVRkJTenRGUVVVMVFqdEpRVU5KTEdkQ1FVRm5RanRKUVVOb1FpeGxRVUZsTzBsQlEyWXNhVUpCUVdsQ08wbEJRMnBDTEdOTVdsazdTVXRoV2l4dlFrRkJiMElzUlVGQlFUdEZRVWQ0UWp0SlFVTkpMR0ZCUVdFN1NVRkRZaXhyUWtGQmEwSXNSVUZCUVR0RlFVZDBRanRKUVVOSkxHOUNRVUZoTzBsQlFXSXNiMEpCUVdFN1NVRkJZaXhoUVVGaE8wbEJRMklzZFVKQlFUSkNPMUZCUVROQ0xHOUNRVUV5UWp0WlFVRXpRaXd5UWtGQk1rSTdTVUZETTBJc2VVSkJRVzFDTzFGQlFXNUNMSE5DUVVGdFFqdFpRVUZ1UWl4dFFrRkJiVUk3U1VGRGJrSXNiMEpCUVc5Q0xFVkJRVUU3UlVGSGVFSTdTVUZEU1N4alRDOUNTenRKUzJkRFRDeHRRa0ZCYlVJc1JVRkJRVHRGUVVWMlFqdEpRVU5KTEcxQ1FVRnRRaXhGUVVGQk8wVkJSM1pDTzBsQlEwa3NaMEpCUVdkQ08wbEJRMmhDTEdWQlFXVTdTVUZEWml4cFFrRkJhVUk3U1VGRGFrSXNjMEpCUVhOQ08wbEJRM1JDTEhsQ1FVRjVRanRKUVVONlFpeG5Ra0ZCWjBJc1JVRkJRVHRGUVRkRGVFSTdTVUZuUkZFc2RVSkJRWFZDTzBsQlEzWkNMR2RDUVVGblFqdEpRVU5vUWl3MlFreG9SRThzUlVGQlFUdEpTMFptTzAxQmNVUlpMR2RDUVVGblFqdE5RVU5vUWl4bFFVRmxPMDFCUTJZc2FVSkJRV2xDTzAxQlEycENMRzlDUVVGdlFpeEZRVUZCTzBsQmVFUm9RenROUVRKRVdTeHZRa0ZCYjBJN1RVRkRjRUlzWjBKQlFXZENPMDFCUTJoQ0xHVkJRV1U3VFVGRFppeHBRa0ZCYVVJN1RVRkRha0lzY1VSQlFYRkVMRVZCUVVFN1NVRXZSR3BGTzAxQmEwVlpMRmRCUVZjN1RVRkRXQ3haUVVGWkxFVkJRVUU3U1VGdVJYaENPMDFCYzBWWkxHTkJRV003VFVGRFpDeG5Ra0ZCWjBJN1RVRkRhRUlzYVVKQlFXbENMRVZCUVVFN1NVRjRSVGRDTzAxQk1rVlpMR2RDUVVGblFqdE5RVU5vUWl4bFFVRmxPMDFCUTJZc2FVSkJRV2xDTzAxQlEycENMR05NTTBWUkxFVkJRVUU3U1V0SWNFSTdUVUZwUmxrc1owSkJRV2RDTzAxQlEyaENMRlZCUVZVN1RVRkRWaXhUUVVGVE8wMUJRMVFzV1VGQldUdE5RVU5hTERCQ1FVRXdRaXhGUVVGQk8wbEJja1owUXp0TlFYbEdXU3h2UWtGQllUdE5RVUZpTEc5Q1FVRmhPMDFCUVdJc1lVRkJZVHROUVVOaUxIbENRVUU0UWp0VlFVRTVRaXh6UWtGQk9FSTdZMEZCT1VJc09FSkJRVGhDTEVWQlFVRTdUVkI0UTNSRE8xRlBiRVJLTzFWQk5rWm5RaXcwUWtGQmMwSTdWVUZCZEVJc05rSkJRWE5DTzJOQlFYUkNMREJDUVVGelFqdHJRa0ZCZEVJc2MwSkJRWE5DTEVWQlFVRXNSVUZaUlR0TlFYcEhlRU03VVVGblIyZENMR05NT1VaRUxFVkJRVUU3VFV0R1pqdFJRVzFIWjBJc1kwRkJZenRSUVVOa0xHZERUR3hIUkR0UlMyMUhReXh2UWtGQmIwSTdVVUZEY0VJc2NVUkJRWEZFTzFGQlEzSkVMR1ZCUVdVN1VVRkRaaXhwUWtGQmFVSTdVVUZEYWtJc2JVSkJRVzFDTEVWQlFVRTdTVUY2UjI1RE8wMUJOa2RaTEZWQlFWVXNSVUZCUVR0TlVETkViRUk3VVU5c1JFbzdWVUVyUjJkQ0xGZEJRVmM3VlVGRFdDeHZRa0ZCYjBJc1JVRkJRU3hGUVV0Rk8wMUJja2gwUXp0UlFXMUlaMElzWjBKQlFXZENPMUZCUTJoQ0xHVkJRV1U3VVVGRFppeHBRa0ZCYVVJc1JVRkJRVHRKUVhKSWFrTTdUVUYzU0Zrc1ZVRkJWU3hGUVVGQk8wMVFkRVZzUWp0UlQyeEVTanRWUVRCSVowSXNWMEZCVnp0VlFVTllMRzlDUVVGdlFpeEZRVUZCTEVWQlMwVTdUVUZvU1hSRE8xRkJPRWhuUWl4blFrRkJaMEk3VVVGRGFFSXNaVUZCWlR0UlFVTm1MR2xDUVVGcFFpeEZRVUZCTzBsQmFFbHFRenROUVc5SldTeFZRVUZWTEVWQlFVRTdUVkJzUm14Q08xRlBiRVJLTzFWQmMwbG5RaXhYUVVGWExFVkJRVUVzUlVGRllUdE5RWGhKZUVNN1VVRjNTV2RDTEcxQ1FVRnRRaXhGUVVGQk96dEJRM2hKYmtNN1JVRkRTU3hYUVVGWE8wVkJRMWdzYlVKT1FWYzdSVTFEV0N4alFVRmpMRVZCUVVFN1JVRkliRUk3U1VGUFVTeG5Ra0ZCWjBJN1NVRkRhRUlzWlVGQlpUdEpRVU5tTEdsQ1FVRnBRanRKUVVOcVFpeHZRa0ZCYjBJc1JVRkJRVHRKVW5kRGVFSTdUVkZzUkVvN1VVRmhXU3hsUVVGbExFVkJRVUVzUlVGQlN6dEZRV0pvUXp0SlFXZENVU3huUWtGQlowSTdTVUZEYUVJc2NVSkJRWEZDTEVWQlFVRTdTVUZxUWpkQ08wMUJiMEpaTEd0Q1FVRnJRaXhGUVVGQk8wMVNPRUl4UWp0UlVXeEVTanRWUVhOQ1owSXNiVUpCUVcxQ0xFVkJRVUVzUlVGWFF6dE5RV3BEY0VNN1VVRjVRbWRDTEd0Q1FVRnJRanRSUVVOc1FpeFBRVUZQTzFGQlExQXNVVUZCVVR0UlFVTlNMRzFEUVVFeVFqdG5Ra0ZCTTBJc01rSkJRVEpDTzFGQlF6TkNMR2RDUVVGblFqdFJRVU5vUWl4bFFVRmxPMUZCUTJZc2FVSkJRV2xDTzFGQlEycENMSEZFUVVGeFJEdFJRVU55UkN4MVFrRkJaVHRSUVVGbUxHVkJRV1VzUlVGQlFUdEpRV3BETDBJN1RVRnZRMWtzZFVKQlFYVkNPMDFCUTNaQ0xHZERRVUZuUXp0TlFVTm9ReXhaUVVGWkxFVkJRVUU3VFVGMFEzaENPMUZCZVVOblFpeGpRVUZqTzFGQlEyUXNaVUZCWlN4RlFVRkJPMGxCTVVNdlFqdE5RWEZFV1N4dlFrRkJZVHROUVVGaUxHOUNRVUZoTzAxQlFXSXNZVUZCWVR0TlFVTmlMSGxDUVVFNFFqdFZRVUU1UWl4elFrRkJPRUk3WTBGQk9VSXNPRUpCUVRoQ08wMUJRemxDTEc5Q1FVRnZRaXhGUVVGQk8wMVNURFZDTzFGUmJFUktPMVZCTUVSblFpdzBRa0ZCYzBJN1ZVRkJkRUlzTmtKQlFYTkNPMk5CUVhSQ0xEQkNRVUZ6UWp0clFrRkJkRUlzYzBKQlFYTkNMRVZCUVVFc1JVRkJTenRKUVRGRU0wTTdUVUUyUkZrc1dVRkJXU3hGUVVGQk8wMVNXSEJDTzFGUmJFUktPMVZCSzBSblFpeFhRVUZYTEVWQlFVRXNSVUZCU3p0SlFTOUVhRU03VFVGcFJWa3NXVUZCV1N4RlFVRkJPMDFTWm5CQ08xRlJiRVJLTzFWQmJVVm5RaXhYUVVGWExFVkJRVUVzUlVGQlN6dEpRVzVGYUVNN1RVRnpSVmtzYTBKQlFXdENPMDFCUTJ4Q0xGZEJRVmM3VFVGRFdDeFZRVUZWTzAxQlExWXNZMEZCWXp0TlFVTmtMRkZCUVZFN1RVRkRVaXhUUVVGVExFVkJRVUU3VFZKNlFtcENPMUZSYkVSS08xVkJOa1ZuUWl4WFFVRlhMRVZCUVVFc1JVRlpVVHROUVhwR2JrTTdVVUZuUm1kQ0xHOUNRVUZoTzFGQlFXSXNiMEpCUVdFN1VVRkJZaXhoUVVGaE8xRkJRMklzWlVGQlpTeEZRVUZCTzAxQmFrWXZRanRSUVc5R1owSXNaMEpCUVdkQ08xRkJRMmhDTEcxQ1FVRnRRaXhGUVVGQk8wMUJja1p1UXp0UlFYZEdaMElzV1VGQldUdFJRVU5hTEdOQlFXTXNSVUZCUVR0SlFYcEdPVUk3VFVFMFJsa3NXVUZCV1N4RlFVRkJPMDFTTVVOd1FqdFJVV3hFU2p0VlFUaEdaMElzVjBGQlZ5eEZRVUZCTEVWQlFVczdTVUU1Um1oRE8wMUJhVWRaTEhsQ1FVRjVRanROUVVONlFpeHRRa0ZCYlVJN1RVRkRia0lzV1VGQldUdE5RVU5hTEZsQlFWazdUVUZEV2l4alFVRmpPMDFCUTJRc1owSkJRV2RDTzAxQlEyaENMRlZCUVZVc1JVRkJRVHROUVhaSGRFSTdVVUV3UjJkQ0xHTk9lRWRFTzFGTmVVZERMR2RDUVVGblFpeEZRVUZCT3p0QlF6TkhhRU03UlVGRFNTeDVRa0ZCZDBJN1JVRkRlRUlzWjBSQlFXZEVPMFZCUTJoRUxGbEJRVmtzUlVGQlFUczdRVUZGYUVJN1JVRkRTU3h0UWtGQmJVSTdSVUZEYmtJc1owTlFURmM3UlU5TldDeHRRa0ZCYlVJc1JVRkJRVHM3UVVGRmRrSTdSVUZEU1N4NVFrRkJkMElzUlVGQlFUczdRVUZGTlVJN1JVRkRTU3hsUVVGbE8wVkJRMllzVjBGQlZ6dEZRVU5ZTEZsQlFWa3NSVUZCUVRzN1FVRkZhRUk3UlVGRFNTeHJRMEZCYTBNN1JVRkRiRU1zYjBOQlFXMURPMFZCUTI1RExIbENRVUYzUWp0RlFVTjRRaXh0UWtGQmJVSXNSVUZCUVRzN1FVRkZka0k3UlVGRlVTeG5Ra0ZCWjBJN1JVRkRhRUlzYVVKQlFXbENPMFZCUTJwQ0xHVkJRV1U3UlVGRFppeGxRVUZsTEVWQlFVRTdPMEZCUlhaQ08wVkJRMGtzZDBKQlFYVkNPMFZCUTNaQ0xEUkNRVUUwUWl4RlFVRkJPenRCUVVWb1F6dEZRVU5KTEhWQ1FVRjFRanRGUVVOMlFpeHZRMEZCYlVNN1JVRkRia01zTmtKQlFUWkNMRVZCUVVFN08wRkRkRU5xUXp0RlFVTkpMR3RDUVVGclFqdEZRVU5zUWl4alFVRmpPMFZCUTJRc1dVRkJXVHRGUVVOYUxGbEJRVms3UlVGRFdpeDVRbEpJVnp0RlVVbFlMR2RDUVVGblFpeEZRVUZCTzBWV05FTm9RanRKVld4RVNqdE5RVk5STEcxQ1FVRnRRanROUVVOdVFpeFZRVUZWTEVWQlFVRXNSVUY1UkZrN1JVRnVSVGxDTzBsQllVc3NZMEZCWXl4RlFVRkJPMFZCUldZN1NVRkRTU3hsUVVGbE8wbEJRMllzYjBKQlFXRTdTVUZCWWl4dlFrRkJZVHRKUVVGaUxHRkJRV0U3U1VGRFlpeHJRa0ZCYTBJc1JVRkJRVHRKUVVoeVFqdE5RVTlQTEZkQlFWYzdUVUZEV0N4cFJFRkJlVU03WTBGQmVrTXNlVU5CUVhsRExFVkJRVUU3UlVGRmFrUTdTVUZEU1N4bFFVRmxPMGxCUTJZc1dVRkJXVHRKUVVOYUxHbENRVUZwUWl4RlFVRkJPMFZCUjNKQ08wbEJRMGtzZVVKU09VSlBPMGxSSzBKUUxHRkJRV0U3U1VGRFlpeFBRVUZQTzBsQlExQXNhMEpCUVd0Q08wbEJRMnhDTEZGQlFWRTdTVUZEVWl4VFFVRlRPMGxCUTFRc2JVSkJRVzFDTzBsQlEyNUNMR05CUVdNN1NVRkRaQ3hyUWtGQmEwSTdTVUZEYkVJc1lVRkJZVHRKUVVOaUxHZENRVUZuUWp0SlFVTm9RaXh4UWtGQmNVSTdTVUZEY2tJc2QwSlNNVU5QTEVWQlFVRTdTVkUyUWxZN1RVRm5RazhzVlVGQlZTeEZRVUZCTzBsQmFFSnFRanROUVcxQ1R5eHRRbEpvUkVjc1JVRkJRVHRKVVRaQ1ZqdE5RWE5DVHl4NVFsSnVSRWM3VFZGdlJFZ3NhMEpCUVd0Q08wMUJRMnhDTEhsQ1VuSkVSeXhGUVVGQk8wVlJkVVJZTzBsQlEwa3NaVUZCWlR0SlFVTm1MR2RDUVVGblFqdEpRVU5vUWl4bFFVRmxPMGxCUTJZc2FVSkJRV2xDTzBsQlEycENMR2xDUVVGcFFqdEpRVU5xUWl4WlFVRlpPMGxCUTFvc2RVSkJRV1U3U1VGQlppeGxRVUZsTEVWQlFVRTdTVUZRYkVJN1RVRlZUeXhqVW14RlF5eEZRVUZCT3p0QlVXOUZZanRGUVVOUkxHbERRVUY1UWp0VlFVRjZRaXg1UWtGQmVVSXNSVUZCUVNJc0ltWnBiR1VpT2lKaGNIQXVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVFHWnZiblF0Wm1GalpTQjdJRnh5WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVJuSmhibXRNYVdkb2RGd2lPMXh5WEc0Z0lDQWdjM0pqT2lCMWNtd29YQ0l1TGk5bWIyNTBjeTlHY21GdWEweHBaMmgwTG1WdmRGd2lLVHRjY2x4dUlDQWdJSE55WXpvZ2RYSnNLRndpTGk0dlptOXVkSE12Um5KaGJtdE1hV2RvZEM1bGIzUS9JMmxsWm1sNFhDSXBabTl5YldGMEtGd2laVzFpWldSa1pXUXRiM0JsYm5SNWNHVmNJaWtzWEhKY2JpQWdJQ0IxY213b1hDSXVMaTltYjI1MGN5OUdjbUZ1YTB4cFoyaDBMbmR2Wm1aY0lpa2dabTl5YldGMEtGd2lkMjltWmx3aUtTeGNjbHh1SUNBZ0lIVnliQ2hjSWk0dUwyWnZiblJ6TDBaeVlXNXJUR2xuYUhRdWRIUm1YQ0lwSUdadmNtMWhkQ2hjSW5SeWRXVjBlWEJsWENJcE8xeHlYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRE13TUR0Y2NseHVmVnh5WEc1Y2NseHVRR1p2Ym5RdFptRmpaU0I3SUZ4eVhHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklGd2lSbkpoYm10Y0lqdGNjbHh1SUNBZ0lITnlZem9nZFhKc0tGd2lMaTR2Wm05dWRITXZSbkpoYm10U1pXZDFiR0Z5TG1WdmRGd2lLVHRjY2x4dUlDQWdJSE55WXpvZ2RYSnNLRndpTGk0dlptOXVkSE12Um5KaGJtdFNaV2QxYkdGeUxtVnZkRDhqYVdWbWFYaGNJaWxtYjNKdFlYUW9YQ0psYldKbFpHUmxaQzF2Y0dWdWRIbHdaVndpS1N4Y2NseHVJQ0FnSUhWeWJDaGNJaTR1TDJadmJuUnpMMFp5WVc1clVtVm5kV3hoY2k1M2IyWm1YQ0lwSUdadmNtMWhkQ2hjSW5kdlptWmNJaWtzWEhKY2JpQWdJQ0IxY213b1hDSXVMaTltYjI1MGN5OUdjbUZ1YTFKbFozVnNZWEl1ZEhSbVhDSXBJR1p2Y20xaGRDaGNJblJ5ZFdWMGVYQmxYQ0lwTzF4eVhHNGdJQ0FnWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEVXdNRHRjY2x4dWZWeHlYRzRpTENKY2NseHVMeW9nVEdGeVoyVWdaR1Z6YTNSdmNITWdZVzVrSUd4aGNIUnZjSE1nS2k5Y2NseHVRRzFwZUdsdUlHMTNNVEU0TUNCN1hISmNiaUFnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ01URTRNSEI0S1h0Y2NseHVJQ0FnSUNBZ0lDQkFZMjl1ZEdWdWREdGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNWNjbHh1UUcxcGVHbHVJRzEzTVRBek1DQjdYSEpjYmlBZ0lDQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dNVEF6TUhCNEtYdGNjbHh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dUx5b2dUR0Z1WkhOallYQmxJSFJoWW14bGRITWdZVzVrSUcxbFpHbDFiU0JrWlhOcmRHOXdjeUFxTDF4eVhHNUFiV2w0YVc0Z2JYYzVOemtnZTF4eVhHNGdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURrM09YQjRLWHRjY2x4dUlDQWdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVMeW9nVUc5eWRISmhhWFFnZEdGaWJHVjBjeUJoYm1RZ2MyMWhiR3dnWkdWemEzUnZjSE1nS2k5Y2NseHVRRzFwZUdsdUlHMTNOelk0SUh0Y2NseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBM05qaHdlQ2w3WEhKY2JpQWdJQ0FnSUNBZ1FHTnZiblJsYm5RN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dUx5b2dUR0Z1WkhOallYQmxJSEJvYjI1bGN5QmhibVFnY0c5eWRISmhhWFFnZEdGaWJHVjBjeUFxTDF4eVhHNUFiV2w0YVc0Z2JYYzJNREFnZTF4eVhHNGdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURZd01IQjRLWHRjY2x4dUlDQWdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVMeW9nVUc5eWRISmhhWFFnY0dodmJtVnpJR0Z1WkNCemJXRnNiR1Z5SUNvdlhISmNia0J0YVhocGJpQnRkelE0TUNCN1hISmNiaUFnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ05EZ3djSGdwZTF4eVhHNGdJQ0FnSUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzR2S2lCSmNHaHZibVVnTlNBcUwxeHlYRzVBYldsNGFXNGdiWGN6TWpBZ2UxeHlYRzRnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklETXlNSEI0S1h0Y2NseHVJQ0FnSUNBZ0lDQkFZMjl1ZEdWdWREdGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNWNjbHh1THlvZ1RYVnNkSGx3ZFhKd2IzTmxJRzFoZUMxM2FXUjBhQ0J0YVhocGJpQXFMMXh5WEc1QWJXbDRhVzRnYlhjb0pIZHBaSFJvS1NCN1hISmNiaUFnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ0pIZHBaSFJvSUNzZ0ozQjRKeWtnZTF4eVhHNGdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVMeW9nVFhWc2RIbHdkWEp3YjNObElHMXBiaTEzYVdSMGFDQnRhWGhwYmlBcUwxeHlYRzVBYldsNGFXNGdiV2x1ZHlna2QybGtkR2dwSUh0Y2NseHVJQ0FnSUVCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBa2QybGtkR2dnS3lBbmNIZ25LU0I3WEhKY2JpQWdJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNWNjbHh1THlvZ1VtVnpjRzl1YzJsMlpTQndZWEpoYldWMGNuTWdLaTljY2x4dVhISmNiaVJ0WVhoWGFXUjBhRG9nTVRNMk1EdGNjbHh1WEhKY2JrQnRhWGhwYmlCaFpHRndkR2wyWlMxbWIyNTBLQ1J3WTFOcGVtVXNJQ1J0YjJKVGFYcGxLU0I3WEhKY2JpQWdJQ0FrWVdSa1UybDZaVG9nSkhCalUybDZaU0F0SUNSdGIySlRhWHBsTzF4eVhHNGdJQ0FnSkcxaGVGZHBaSFJvT2lBa2JXRjRWMmxrZEdnZ0xTQXpNakE3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SUdOaGJHTW9JM3NrYlc5aVUybDZaU0FySUhCNGZTQXJJQ043SkdGa1pGTnBlbVY5SUNvZ0tDZ3hNREIyZHlBdElETXlNSEI0S1NBdklDTjdKRzFoZUZkcFpIUm9mU2twTzF4eVhHNTlYSEpjYmx4eVhHNUFiV2w0YVc0Z1lXUmhjSFJwZG1VdGNHRmtaR2x1Wnlna2NHTlRhWHBsTENBa2JXOWlVMmw2WlNrZ2UxeHlYRzRnSUNBZ0pHRmtaRk5wZW1VNklDUndZMU5wZW1VZ0xTQWtiVzlpVTJsNlpUdGNjbHh1SUNBZ0lDUnRZWGhYYVdSMGFEb2dKRzFoZUZkcFpIUm9JQzBnTXpJd08xeHlYRzRnSUNBZ2NHRmtaR2x1WnpvZ1kyRnNZeWdqZXlSdGIySlRhWHBsSUNzZ2NIaDlJQ3NnSTNza1lXUmtVMmw2WlgwZ0tpQW9LREV3TUhaM0lDMGdNekl3Y0hncElDOGdJM3NrYldGNFYybGtkR2g5S1NrN1hISmNibjFjY2x4dVhISmNia0J0YVhocGJpQmhaR0Z3ZEdsMlpTMTNhV1IwYUNna2NHTlRhWHBsTENBa2JXOWlVMmw2WlNrZ2UxeHlYRzRnSUNBZ0pHRmtaRk5wZW1VNklDUndZMU5wZW1VZ0xTQWtiVzlpVTJsNlpUdGNjbHh1SUNBZ0lDUnRZWGhYYVdSMGFEb2dKRzFoZUZkcFpIUm9JQzBnTXpJd08xeHlYRzRnSUNBZ2QybGtkR2c2SUdOaGJHTW9JM3NrYlc5aVUybDZaU0FySUhCNGZTQXJJQ043SkdGa1pGTnBlbVY5SUNvZ0tDZ3hNREIyZHlBdElETXlNSEI0S1NBdklDTjdKRzFoZUZkcFpIUm9mU2twTzF4eVhHNTlYSEpjYmx4eVhHNUFiV2w0YVc0Z1lXUmhjSFJwZG1VdGFHVnBaMmgwS0NSd1kxTnBlbVVzSUNSdGIySlRhWHBsS1NCN1hISmNibHh5WEc0Z0lDQWdKR0ZrWkZOcGVtVTZJQ1J3WTFOcGVtVWdMU0FrYlc5aVUybDZaVHRjY2x4dUlDQWdJQ1J0WVhoWGFXUjBhRG9nSkcxaGVGZHBaSFJvSUMwZ016SXdPMXh5WEc0Z0lDQWdhR1ZwWjJoME9pQmpZV3hqS0NON0pHMXZZbE5wZW1VZ0t5QndlSDBnS3lBamV5UmhaR1JUYVhwbGZTQXFJQ2dvTVRBd2RuY2dMU0F6TWpCd2VDa2dMeUFqZXlSdFlYaFhhV1IwYUgwcEtUdGNjbHh1ZlZ4eVhHNWNjbHh1THlvZ1JXNWtJSEpsYzNCdmJuTnBkbVVnY0dGeVlXMWxkSEp6SUNvdklpd2lLaUI3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ0lDQnRZWEpuYVc0NklEQTdYRzRnSUNBZ1ltOXlaR1Z5T2lBd095QjlYRzVjYmlvc0lDbzZZbVZtYjNKbExDQXFPbUZtZEdWeUlIdGNiaUFnSUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPeUI5WEc1Y2JpbzZabTlqZFhNc0lDbzZZV04wYVhabElIdGNiaUFnSUNCdmRYUnNhVzVsT2lCdWIyNWxPeUI5WEc1Y2JtSnZaSGtnZTF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCR2NtRnVheXdnU0dWc2RtVjBhV05oTENCQmNtbGhiQ3dnYzJGdWN5MXpaWEpwWmp0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBalJUVkZOVVUxTzF4dUlDQWdJR052Ykc5eU9pQWtZbXhoWTJzN0lIMWNibHh1TG1OdmJuUmhhVzVsY2lCN1hHNGdJQ0FnYldGNExYZHBaSFJvT2lBeE5UQXdjSGc3WEc0Z0lDQWdiV0Z5WjJsdU9pQXdJR0YxZEc4N1hHNGdJQ0FnYldsdUxYZHBaSFJvT2lBek16QndlRHRjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzVjYmlBZ0lDQkFhVzVqYkhWa1pTQnRkeWd4TmpBd0tTQjdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dNQ0F5TUhCNE95QjlJSDFjYm5Wc0lIdGNiaUFnSUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsTzF4dUlDQWdJRzFoY21kcGJqb2dNRHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdPeUI5WEc1Y2JtRWdlMXh1SUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYmlBZ0lDQmpiMnh2Y2pvZ2FXNW9aWEpwZER0Y2JpQWdJQ0IwY21GdWMybDBhVzl1T2lBdU1uTTdJSDFjYmx4dVhHNHVkM0poY0hCbGNpQjdYRzRnSUNBZ2JXRjRMWGRwWkhSb09pQXhNVFV3Y0hnN1hHNGdJQ0FnYldGeVoybHVPaUF3SUdGMWRHODdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01DQXhOWEI0SURBN0lIMWNibHh1WEc1Y2JpSXNJaTh2SUdOdmJHOXljMXh1SkhKbFpEb2dJemxHTURBeU16dGNiaVJpYkdGamF6b2dJek0zTXpNek5EdGNiaVJzYVdkb2RDMW5jbVY1T2lBak9UVTVOVGsxTzF4dUlpd2ljM1puSUh0Y2JpQWdJQ0J0WVhndGQybGtkR2c2SURFNGNIZzdYRzRnSUNBZ2JXRjRMV2hsYVdkb2REb2dNakJ3ZURzZ2ZWeHVYRzR1WW5SdUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQmliM0prWlhJNklESndlQ0J6YjJ4cFpDQWtjbVZrTzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEVTJjSGc3WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERTJjSGc3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNBZ0lIQmhaR1JwYm1jNklERTJjSGdnTWpkd2VEdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ0xqSnpPeUI5WEc1Y2JpNXRiM0psSUh0Y2JpQWdJQ0FtT2pwaFpuUmxjaUI3WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhOMGVXeGxPaUJ6YjJ4cFpEdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxYZHBaSFJvT2lBd0xqRTFaVzBnTUM0eE5XVnRJREFnTUR0Y2JpQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0p5YzdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBd0xqUTFaVzA3WEc0Z0lDQWdJQ0FnSUhKcFoyaDBPaUF0TWpOd2VEdGNiaUFnSUNBZ0lDQWdkRzl3T2lBMU1DVTdYRzRnSUNBZ0lDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0E3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF3TGpRMVpXMDdYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLREV6TldSbFp5a2dkSEpoYm5Oc1lYUmxXU2c0TUNVcE8xeHVJQ0FnSUNBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJQ0FnSUNBZ0lIUnlZVzV6YVhScGIyNDZJQzR4Y3pzZ2ZTQjlYRzVjYmx4dVhHNHVaR2x6WVdKc1pXUXRhWFJsYlNCN1hHNGdJQ0FnWTI5c2IzSTZJQ1JzYVdkb2RDMW5jbVY1TzF4dVhHNGdJQ0FnSmpwb2IzWmxjaUI3WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFrYkdsbmFIUXRaM0psZVNBaGFXMXdiM0owWVc1ME95QjlJSDFjYmx4dUxtUnBjMkZpYkdWa0xXVnNJSHRjYmlBZ0lDQmliM0prWlhJNklESndlQ0J6YjJ4cFpDQWtiR2xuYUhRdFozSmxlU0FoYVcxd2IzSjBZVzUwTzF4dUlDQWdJR052Ykc5eU9pQWtiR2xuYUhRdFozSmxlVHNnZlZ4dVhHNHVabTlqZFhObFpDQjdYRzRnSUNBZ2RHOXdPaUF0T0hCNElDRnBiWEJ2Y25SaGJuUTdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhNWEI0SUNGcGJYQnZjblJoYm5RN0lIMWNibHh1TG1admNtMHRZV3hsY25RZ2UxeHVJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQXlNSEI0TzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTVRod2VEc2dmVnh1WEc0dVgyVnljaUI3WEc0Z0lDQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ01YQjRJSE52Ykdsa0lDUnlaV1FnSVdsdGNHOXlkR0Z1ZERzZ2ZWeHVYRzR1WlhKeUxXMXpaeUI3WEc0Z0lDQWdZMjlzYjNJNklDUnlaV1E3SUgxY2JseHVMbk4xWTJObGMzTXRiWE5uSUh0Y2JpQWdJQ0JqYjJ4dmNqb2daM0psWlc0N0lIMWNiaUlzSWk1b1pXRmtaWElnZTF4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBM01EQTdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXlNSEI0TzF4dUlDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeE16VWxPMXh1SUNBZ0lHSnZjbVJsY2kxaWIzUjBiMjA2SURSd2VDQnpiMnhwWkNBa1lteGhZMnM3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklESTBjSGc3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdiWGNvTVRJME1Da2dlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dOVEJ3ZURzZ2ZWeHVYRzRnSUNBZ0psOWZkRzl3SUh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJRFV5Y0hnN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nYzNCaFkyVXRZbVYwZDJWbGJqdGNiaUFnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJRFl3Y0hnN1hHNWNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdiWGNvTlRFd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVMWEpsZG1WeWMyVTdJSDFjYmx4dUlDQWdJQ0FnSUNBbUxXSjBiaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1PbWh2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJNklDTm1aakF3TURBZ01uQjRJSE52Ykdsa095QjlJSDFjYmx4dVhHNGdJQ0FnSUNBZ0lDWXRjbWxuYUhRZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGNExYZHBaSFJvT2lBME1EQndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ05UQndlRHNnZlZ4dVhHNGdJQ0FnSUNBZ0lDWXRjR2h2Ym1VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQTBOSEI0T3lCOVhHNWNibHh1SUNBZ0lDQWdJQ0FtTFhObFlYSmphQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF5Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzRnSUNBZ0lDQWdJQ0FnSUNCemRtY2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtY3RkRzl3T2lBeWNIZzdJSDBnZlNCOVhHNWNibHh1SUNBZ0lDWmZYMkp2ZEhSdmJTQjdYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnSUNBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ2MzQmhZMlV0WW1WMGQyVmxianRjYmlBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNLREV5TkRBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUNBZ0lDQWdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdJSDBnZlZ4dVhHNGdJQ0FnSmw5ZmJXVnVkU0I3WEc0Z0lDQWdJQ0FnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F5TGpOek95QjlYRzRnSUNBZ0xtMWxiblVnZTF4dUlDQWdJQ0FnSUNCNkxXbHVaR1Y0T2lBeE1EQXdNRHRjYmx4dVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNLREV5TkRBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nTUhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxianNnZlZ4dVhHNGdJQ0FnSUNBZ0lDWmZYMnhwYzNRZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2JYY29NVEkwTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJtYkdWNExXVnVaRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5T3lCOUlIMWNibHh1WEc0Z0lDQWdJQ0FnSUNaZlgybDBaVzBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBME9IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdGR5Z3hOREF3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1TFhKcFoyaDBPaUF5TlhCNE95QjlYRzRnSUNBZ0lDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdGR5Z3hNalF3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SURFMWNIZzdJSDBnZlZ4dVhHNWNibHh1WEc1Y2JpQWdJQ0FnSUNBZ0psOWZjM1ZpYkdsemRDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZWkxcGJtUmxlRG9nTVRBd01EQTdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGIzQTZJREkxY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dJMlUxWlRWbE5UdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWM2SURFMWNIZ2dNVGh3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNqb2dNbkI0SUhOdmJHbGtJQ1JpYkdGamF6c2dmVnh1WEc0Z0lDQWdJQ0FnSUNaZlgzTjFZbWwwWlcwZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJREUxY0hnN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUNZNmFHOTJaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUFrY21Wa095QjlJSDFjYmx4dUlDQWdJQ0FnSUNBbVgxOXBkR1Z0T21odmRtVnlQbUVnTG0xbGJuVmZYM04xWW14cGMzUWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOcklDRnBiWEJ2Y25SaGJuUTdJSDFjYmx4dVhHNGdJQ0FnSUNBZ0lDWXViVzlpTFdGamRHbDJaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHRjFkRzg3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkbVZ5Wm14dmR6b2dkbWx6YVdKc1pUc2dmU0I5WEc1Y2JseHVJQ0FnSUM1emRXSnpZM0pwWW1VZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzEzS0RZM01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pteGxlQzFrYVhKbFkzUnBiMjQ2SUdOdmJIVnRianNnZlZ4dVhHNGdJQ0FnSUNBZ0lDWmZYM1JsZUhRZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQTBPSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdiWGNvTmpjd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNVFZ3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREE3SUgwZ2ZWeHVYRzRnSUNBZ0lDQWdJQ1pmWDJsamIyNXpJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpjR0Z1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFMmNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ01UWndlRHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMlp5QjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2dZMlZ1ZEdWeU95QjlJSDBnZlNCOUlIMWNibHh1TG0xbGJuVmZYMmwwWlcwdWJXOXlaU0I3WEc0Z0lDQWdKanBoWm5SbGNpQjdYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzEzS0RFeU5EQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnZjRG9nTXpBbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnY21sbmFIUTZJQzB5TUhCNE95QjlJSDBnZlZ4dVhHNWNiaTV0Wlc1MVgxOXRiMklnZTF4dUlDQWdJR2hsYVdkb2REb2dOVEJ3ZUR0Y2JpQWdJQ0IzYVdSMGFEb2dOekJ3ZUR0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdiR1ZtZERvZ01EdGNiaUFnSUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JseHVJQ0FnSUNZdGJHbHVaU0I3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREV3Y0hnN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURod2VEdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSkdKc1lXTnJPeUI5WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0J0ZHlneE1qUXdLU0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPeUI5WEc1Y2JpQWdJQ0JBYVc1amJIVmtaU0J0ZHlnMk5UQXBJSHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJRFF3Y0hnN1hHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ016QndlRHRjYmx4dUlDQWdJQ0FnSUNBbUxXeHBibVVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01UQndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQTJjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFrWW14aFkyczdJSDBnZlNCOVhHNWNibHh1WEc0dWJXOWlMV0ZqZEdsMlpTQXViV1Z1ZFY5ZmJXOWlMV3hwYm1VZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDUnlaV1E3SUgxY2JseHVMbTF2WWkxaFkzUnBkbVVnTG0xbGJuVmZYMjF2WWkxc2FXNWxPbVpwY25OMExXTm9hV3hrSUh0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2cwTldSbFp5a2dkSEpoYm5Oc1lYUmxXU2d4TW5CNEtUc2dmVnh1WEc0dWJXOWlMV0ZqZEdsMlpTQXViV1Z1ZFY5ZmJXOWlMV3hwYm1VNmJuUm9MV05vYVd4a0tESXBJSHRjYmlBZ0lDQmthWE53YkdGNU9pQnViMjVsT3lCOVhHNWNiaTV0YjJJdFlXTjBhWFpsSUM1dFpXNTFYMTl0YjJJdGJHbHVaVHBzWVhOMExXTm9hV3hrSUh0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2d0TkRWa1pXY3BJSFJ5WVc1emJHRjBaVmtvTFRFeWNIZ3BPeUI5WEc1Y2JseHVRR2x1WTJ4MVpHVWdiWGNvTmpVd0tTQjdYRzRnSUNBZ0xtMXZZaTFoWTNScGRtVWdMbTFsYm5WZlgyMXZZaTFzYVc1bE9tWnBjbk4wTFdOb2FXeGtJSHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkRWa1pXY3BJSFJ5WVc1emJHRjBaVmtvTVRGd2VDazdJSDFjYmx4dUlDQWdJQzV0YjJJdFlXTjBhWFpsSUM1dFpXNTFYMTl0YjJJdGJHbHVaVHBzWVhOMExXTm9hV3hrSUh0Y2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb0xUUTFaR1ZuS1NCMGNtRnVjMnhoZEdWWktDMHhNWEI0S1RzZ2ZTQjlYRzRpTENJdWJtVjNjeUI3WEc0Z0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURVMWNIZzdYRzVjYmlBZ0lDQW1YMTkwYVhSc1pTQjdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURjd2NIZzdYRzRnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeE1qVWxPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dOWEI0T3lCOVhHNWNiaUFnSUNBbVgxOWljbVZoWkdOeWRXMWljeUI3WEc0Z0lDQWdJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UWndlRHRjYmlBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXpOU1U3WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFrYkdsbmFIUXRaM0psZVR0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SURVMWNIZzdJSDFjYmx4dUlDQWdJQ1pmWDJacGJIUmxjaUI3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzVjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb05qVXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TFhKbGRtVnljMlU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPeUI5SUgxY2JseHVJQ0FnSUNaZlgyTmhiR1Z1WkdGeUlIdGNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lDQWdJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQTBOamh3ZUR0Y2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBMk1IQjRPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQTFNSEI0TzF4dUlDQWdJQ0FnSUNCdGFXNHRkMmxrZEdnNklETXlNSEI0TzF4dVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNLRFkxTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBNU1DVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCdGFXNHRkMmxrZEdnNklESTNNSEI0T3lCOVhHNGdJQ0FnSUNBZ0lHbHVjSFYwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNqb2dNbkI0SUhOdmJHbGtJQ016TnpNek16UTdYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWM2SURBZ01UVndlQ0F3SURZMGNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMV1poYldsc2VUb2dSbkpoYm1zc0lFaGxiSFpsZEdsallTd2dRWEpwWVd3c0lITmhibk10YzJWeWFXWTdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXpOU1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pHSnNZV05yTzF4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSTBVMVJUVkZOVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjFjbk52Y2pvZ2NHOXBiblJsY2pzZ2ZWeHVJQ0FnSUNBZ0lDQXVZMkZzTFdsamIyNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWbWREb2dNalJ3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ2Y0RvZ05UQWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLQzAxTUNVcE95QjlJSDFjYmx4dVhHNWNiaUFnSUNBbVgxOXNhWE4wSUh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJRGd6Y0hnN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHZHlhV1E3WEc0Z0lDQWdJQ0FnSUdkeWFXUXRkR1Z0Y0d4aGRHVXRZMjlzZFcxdWN6b2djbVZ3WldGMEtETXNJREZtY2lrN1hHNGdJQ0FnSUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0Y205M2N6b2djbVZ3WldGMEtHRjFkRzhzSURGbWNpazdYRzRnSUNBZ0lDQWdJR2R5YVdRdFkyOXNkVzF1TFdkaGNEb2dOVEJ3ZUR0Y2JpQWdJQ0FnSUNBZ1ozSnBaQzF5YjNjdFoyRndPaUE0TUhCNE8xeHVYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzEzS0RFeU5EQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHZHlhV1F0ZEdWdGNHeGhkR1V0WTI5c2RXMXVjem9nY21Wd1pXRjBLR0YxZEc4dFptbDBMQ0J0YVc1dFlYZ29ORFVsTENBeFpuSXBLVHNnZlZ4dVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNLRFkxTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWjNKcFpDMTBaVzF3YkdGMFpTMWpiMngxYlc1ek9pQnlaWEJsWVhRb1lYVjBieTFtYVhRc0lHMXBibTFoZUNnNU9DVXNJREZtY2lrcE95QjlJSDFjYmlBZ0lDQW1YMTlwZEdWdElIdGNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQTFNREJ3ZUR0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE95QjlYRzVjYmlBZ0lDQW1YMTlwZEdWdExXbHRaeUI3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUEwTUhCNE8xeHVYRzRnSUNBZ0lDQWdJR2x0WnlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlRzZ2ZTQjlYRzVjYmlBZ0lDQW1YMTlwZEdWdExXMWxkR0VnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lDQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR1pzWlhndGMzUmhjblE3WEc0Z0lDQWdJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBeE1uQjRPeUI5WEc1Y2JpQWdJQ0FtWDE5cGRHVnRMWFJoWjNNZ2UxeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pISmxaRHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dOREJ3ZURzZ2ZWeHVYRzRnSUNBZ0psOWZhWFJsYlMxMFlXY2dlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXlNSEI0T3lCOVhHNWNiaUFnSUNBbVgxOXBkR1Z0TFdSaGRHVWdlMXh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFeWNIZzdYRzRnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeE1UVWxPMXh1SUNBZ0lDQWdJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dNQzR3TldWdE8xeHVJQ0FnSUNBZ0lDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxYUnZjRG9nTTNCNE95QjlYRzVjYmlBZ0lDQW1YMTlwZEdWdExYUnBkR3hsSUh0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXlNSEI0TzF4dUlDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNamR3ZUR0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SURRMmNIZzdJSDFjYmx4dUlDQWdJQ1pmWDNSbGVIUWdlMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE95QjlYRzVjYmlBZ0lDQXVaWGgwTFdGeWNtOTNJSHRjYmlBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJQ0FnSUNCaWIzUjBiMjA2SURBN1hHNGdJQ0FnSUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnSUNBZ0lHMWhlQzEzYVdSMGFEb2dNamh3ZUR0Y2JpQWdJQ0FnSUNBZ2JXRjRMV2hsYVdkb2REb2dNamh3ZURzZ2ZWeHVYRzRnSUNBZ0xuZHBaR1V0WVc1dmRXNWpaU0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQWdJR2hsYVdkb2REb2dNell3Y0hnN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdJQ0JuY21sa0xXTnZiSFZ0YmpvZ01TODBPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBalptWm1abVptTzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBME9IQjRPMXh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2JYY29NVEkwTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWjNKcFpDMWpiMngxYlc0NklERXZNenNnZlZ4dVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNLREV3TURBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nTkRVd2NIZzdJSDFjYmx4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdGR5ZzJOVEFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJREV3TUNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JuY21sa0xXTnZiSFZ0YmpvZ01TOHlPeUI5WEc1Y2JpQWdJQ0FnSUNBZ0xtNWxkM05mWDJsMFpXMHRhVzVtYnlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dOalV3Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnMk5UQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNekF3Y0hnN0lIMGdmVnh1WEc0Z0lDQWdJQ0FnSUM1dVpYZHpYMTkwWlhoMElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRE13TUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRad2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlObkI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxbVlXMXBiSGs2SUVaeVlXNXJUR2xuYUhRc0lFaGxiSFpsZEdsallTd2dRWEpwWVd3c0lITmhibk10YzJWeWFXWTdJSDFjYmx4dUlDQWdJQ0FnSUNBdVpYaDBMV0Z5Y205M0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKcFoyaDBPaUF4TWlVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpYjNSMGIyMDZJRFV3Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzWldaME9pQmhkWFJ2T3lCOVhHNWNiaUFnSUNBZ0lDQWdMbTVsZDNOZlgybDBaVzB0YVcxbklIdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dOVEJ3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzEzS0RFeU5EQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dOVEFsT3lCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnMk5UQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlRzZ2ZTQjlJSDFjYmlBZ0lDQXVibVYzYzE5ZmJtRjJJSHRjYmlBZ0lDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nTWpnd2NIZzdYRzRnSUNBZ0lDQWdJRzFoY21kcGJqb2dNQ0JoZFhSdk8xeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RkRzl3T2lBM01IQjRPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dNM0I0TzF4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUEzTUhCNE8xeHVYRzRnSUNBZ0lDQWdJQ1l0WVhKeWIzY2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWW05MGRHOXRPaUF0TVRCd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TkhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4TW5CNE95QjlYRzVjYmlBZ0lDQWdJQ0FnSmkxaGNuSnZkeTVzWldaMElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkbWNnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdacGJHdzZJQ1JpYkdGamF6c2dmU0I5WEc1Y2JpQWdJQ0FnSUNBZ0ppMWhjbkp2ZHk1eWFXZG9kQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlhV2RvZERvZ01Ec2dmVnh1WEc0Z0lDQWdJQ0FnSUM1cGJtRmpkR2wyWlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYVd4c09pQWtiR2xuYUhRdFozSmxlU0FoYVcxd2IzSjBZVzUwT3lCOVhHNWNiaUFnSUNBZ0lDQWdKaTF1ZFcxaVpYSnpJSHQ5WEc1Y2JpQWdJQ0FnSUNBZ0ppMXVkVzFpWlhJZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVPaUF3SURFeGNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOekF3T3lCOVhHNWNiaUFnSUNBZ0lDQWdKaTF1ZFcxaVpYSXVZV04wYVhabElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTFpYjNSMGIyMDZJREp3ZUNCemIyeHBaQ0FrY21Wa095QjlJSDBnZlZ4dUlpd2lMbVp2YjNSbGNpQjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dJMlptWm1abVpqdGNiaUFnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTlRCd2VEdGNibHh1WEc0Z0lDQWdMbk4xWW5OamNtbGlaU0I3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQTFPWEI0TzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTlRSd2VEdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ01uQjRJSE52Ykdsa0lDUmliR0ZqYXp0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTkRkd2VEdGNibHh1SUNBZ0lDQWdJQ0FtWDE5MFpYaDBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklESXdjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeU5IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV4TlNVN0lIMWNibHh1SUNBZ0lDQWdJQ0FtWDE5cFkyOXVjeUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpjR0Z1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuTFhKcFoyaDBPaUF5TUhCNE95QjlJSDBnZlZ4dVhHNGdJQ0FnSmw5ZlltOTBkRzl0SUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJ6Y0dGalpTMWlaWFIzWldWdU8xeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdJSDFjYmx4dUlDQWdJQ1pmWDJOeVpXUnBkSE1nZTF4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdGR5ZzBNREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRGd2VEc2dmU0I5WEc1Y2JpQWdJQ0FtWDE5amIzQjVjbWxuYUhRZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXpzZ2ZWeHVYRzVjYmlBZ0lDQW1YMTk0Y0dGblpTQjdYRzRnSUNBZ0lDQWdJSE4yWnlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURjMGNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYZ3RhR1ZwWjJoME9pQXlNSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOTBkRzl0T2lBd08xeHVJQ0FnSUNBZ0lDQWdJQ0FnY21sbmFIUTZJREE3SUgwZ2ZTQjlYRzRpTENJdWJtVjNjeTFrWlhSaGFXeHpJSHRjYmlBZ0lDQndZV1JrYVc1bkxYUnZjRG9nTlRWd2VEdGNibHh1SUNBZ0lDWmZYM1JwZEd4bElIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTlRSd2VEdGNiaUFnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFeU5TVTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQTFjSGc3WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEWTFNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUEwTUhCNE95QjlJSDFjYmx4dUlDQWdJQ1pmWDJKeVpXRmtZM0oxYldKeklIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVRNMUpUdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDUnNhV2RvZEMxbmNtVjVPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dOVFZ3ZURzZ2ZWeHVYRzVjYmlBZ0lDQW1YMTlwZEdWdElIdGNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQTFNREJ3ZUR0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE95QjlYRzVjYmx4dUlDQWdJQ1pmWDJsMFpXMHRiV1YwWVNCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWm14bGVDMXpkR0Z5ZER0Y2JpQWdJQ0FnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklERXljSGc3SUgxY2JseHVYRzRnSUNBZ0psOWZhWFJsYlMxMFlXZHpJSHRjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJQ1J5WldRN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SURRd2NIZzdJSDFjYmx4dUlDQWdJQ1pmWDJsMFpXMHRkR0ZuSUh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTWpCd2VEc2dmVnh1WEc1Y2JpQWdJQ0FtWDE5cGRHVnRMV1JoZEdVZ2UxeHVJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV5Y0hnN1hHNGdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TVRVbE8xeHVJQ0FnSUNBZ0lDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ01DNHdOV1Z0TzF4dUlDQWdJQ0FnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFhSdmNEb2dNM0I0T3lCOVhHNWNiaUFnSUNBdWJtVjNjeUI3WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURRemNIZ2dNQ0F4TXpsd2VDQXdPMXh1SUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURrNE5YQjRPMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRkRzl3T2lCemIyeHBaQ0F5Y0hnZ0pHSnNZV05yTzF4dVhHNGdJQ0FnSUNBZ0lHZzBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURJd2NIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNamR3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQXpNSEI0T3lCOVhHNWNiaUFnSUNBZ0lDQWdjQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXlOWEI0SURBZ05UQndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUF6TURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFMmNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNalp3ZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdFptRnRhV3g1T2lCR2NtRnVhMHhwWjJoMExDQklaV3gyWlhScFkyRXNJRUZ5YVdGc0xDQnpZVzV6TFhObGNtbG1PeUI5WEc1Y2JpQWdJQ0FnSUNBZ2RtbGtaVzhnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXdNQ1U3SUgxY2JseHVJQ0FnSUNBZ0lDQnpkSEp2Ym1jZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dPVEF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURNd2NIZzdJSDFjYmx4dUlDQWdJQ0FnSUNCemNHRnVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUF6TURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFMGNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNVE0xSlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQWtiR2xuYUhRdFozSmxlVHNnZlZ4dVhHNGdJQ0FnSUNBZ0lHaHlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQXdJREkxY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQXdPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lCdWIyNWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhSdmNEb2dNWEI0SUhOdmJHbGtJQ016TXpNN0lIMWNibHh1WEc0Z0lDQWdJQ0FnSUNaZlgyMWxkR0VnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb09UVXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqc2dmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpjR0Z1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkdKc1lXTnJPeUI5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ1l0ZEdsMGJHVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxaWIzUjBiMjA2SURKd2VDQnpiMnhwWkNBa1lteGhZMnM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJREUwY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzFtWVcxcGJIazZJRVp5WVc1clRHbG5hSFFzSUVobGJIWmxkR2xqWVN3Z1FYSnBZV3dzSUhOaGJuTXRjMlZ5YVdZN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhObkI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhNelVsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREUxY0hnN0lIMGdmVnh1WEc1Y2JpQWdJQ0FnSUNBZ0psOWZZWFYwYUc5eUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF6TlNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnNU5UQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTWpCd2VEc2dmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1MVzVoYldVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUExTURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXlNSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlOM0I0T3lCOUlIMWNibHh1SUNBZ0lDQWdJQ0FtWDE5MFlXZHpJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBek5TVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCdGR5ZzVOVEFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01qQndlRHNnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FtTFd4cGMzUWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TXpVbE95QjlJSDFjYmx4dVhHNGdJQ0FnSUNBZ0lDWmZYM05vWVhKbElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF5TUNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnNU5UQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlRzZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNCaGJpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ01UWndlRHNnZlNCOUlIMGdmVnh1SWl3aUxtWnZjbTFmWDNkeVlYQndaWElnZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNSaWJHRmphenRjYmlBZ0lDQmpiMnh2Y2pvZ0kyWm1abVptWmp0Y2JseHVYRzRnSUNBZ0xtWnZjbTFmWDNScGRHeGxJSHRjYmlBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBMU1uQjRPMXh1SUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01USTFKVHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nT1RCd2VDQXdJRFV3Y0hnN1hHNWNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdiWGNvTmpVd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklEUXdjSGc3SUgwZ2ZWeHVYRzRnSUNBZ0xtWnZjbTBnZTF4dUlDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklEazROWEI0TzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTVRBNGNIZzdYRzVjYmlBZ0lDQWdJQ0FnTG1sdWNIVjBMWGR5WVhBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdiWGNvT1RjMUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01qVndlRHNnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6Y0dGdUxtWnZjbTFmWDNCc1lXTmxhRzlzWkdWeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1ZtZERvZ01EdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBiM0E2SURVd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTFRVd0pTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURNd01EdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREUyY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV6TlNVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzFtWVcxcGJIazZJRVp5WVc1clRHbG5hSFFzSUVobGJIWmxkR2xqWVN3Z1FYSnBZV3dzSUhOaGJuTXRjMlZ5YVdZN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dMakp6T3lCOUlIMWNibHh1SUNBZ0lDQWdJQ0JwYm5CMWRDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxaWIzUjBiMjA2SURGd2VDQnpiMnhwWkNBalJrWkdSa1pHTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQTBNSEI0TzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FtVzNSNWNHVTlYQ0owWlhoMFhDSmRJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dJMFpHUmtaR1JqdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXdJREV3Y0hnN0lIMGdmVnh1WEc1Y2JseHVJQ0FnSUNBZ0lDQXZMeUJwYm5CMWREcG1iMk4xY3lBcklDNW1iM0p0WDE5d2JHRmpaV2h2YkdSbGNpeGNiaUFnSUNBZ0lDQWdMeThnYVc1d2RYUTZZV04wYVhabElDc2dMbVp2Y20xZlgzQnNZV05sYUc5c1pHVnlMRnh1SUNBZ0lDQWdJQ0F2THlBZ0lDQWdkRzl3T2lBdE9IQjRYRzRnSUNBZ0lDQWdJQzh2SUNBZ0lDQm1iMjUwTFhOcGVtVTZJREV4Y0hoY2JseHVYRzRnSUNBZ0lDQWdJQ1pmWDNSdmNDMXNhVzVsSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJSE53WVdObExXSmxkSGRsWlc0N1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dORGh3ZUR0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb09UYzFLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqc2dmU0I5WEc1Y2JpQWdJQ0FnSUNBZ0psOWZibUZ0WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNek00Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnNU56VXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlRzZ2ZTQjlYRzRnSUNBZ0lDQWdJQ1pmWDJWdFlXbHNJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBek16aHdlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNLRGszTlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPeUI5SUgxY2JseHVJQ0FnSUNBZ0lDQW1YMTltYVd4bElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSG90YVc1a1pYZzZJQzB4TzF4dUlDQWdJQ0FnSUNBZ0lDQWdiM0JoWTJsMGVUb2dNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklEQTdYRzRnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlnNU56VXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlRzZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBbUxXeGhZbVZzSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR04xY25OdmNqb2djRzlwYm5SbGNqc2dmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1MV2xqYjI0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGRHOXdPaUF5Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTVRCd2VEc2dmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1MV0owYmlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURJd01IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck95QjlJSDFjYmx4dUlDQWdJQ0FnSUNBbVgxOWpiMjF0Wlc1MElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUE1T0RWd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEazNOU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE95QjlJSDFjYmx4dUlDQWdJQ0FnSUNBbVgxOXpkV0p0YVhRZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlPaUF5Y0hnZ2MyOXNhV1FnSTBaR1JrWkdSanRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURVMmNIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURVd2NIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRZd2NIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSTJabVptWm1aanRjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJRGd5Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3TzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FtT21odmRtVnlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKR0pzWVdOck8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJQ05tWm1ZN0lIMGdmU0I5SUgxY2JpSXNJaTVoYVhJdFpHRjBaWEJwWTJ0bGNpMHRZMjl1ZEdWdWRDQjdYRzRnSUNBZ1kyOXNiM0k2SUNSaWJHRmpheUFoYVcxd2IzSjBZVzUwTzF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCR2NtRnVheXdnU0dWc2RtVjBhV05oTENCQmNtbGhiQ3dnYzJGdWN5MXpaWEpwWmp0Y2JpQWdJQ0IzYVdSMGFEb2dNelV3Y0hnN0lIMWNibHh1TG1GcGNpMWtZWFJsY0dsamEyVnlMV0p2WkhrdExXUmhlUzF1WVcxbElIdGNiaUFnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTTNCNE8xeHVJQ0FnSUdKdmNtUmxjaTFpYjNSMGIyMDZJREp3ZUNCemIyeHBaQ0FrWW14aFkyczdYRzRnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTWpCd2VEc2dmVnh1WEc0dVlXbHlMV1JoZEdWd2FXTnJaWEl0WW05a2VTMHRaR0Y1TFc1aGJXVWdlMXh1SUNBZ0lHTnZiRzl5T2lBa1lteGhZMnNnSVdsdGNHOXlkR0Z1ZERzZ2ZWeHVYRzR1WVdseUxXUmhkR1Z3YVdOclpYSXRZMlZzYkNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeE1uQjRPMXh1SUNBZ0lIZHBaSFJvT2lBeU5YQjRPMXh1SUNBZ0lHaGxhV2RvZERvZ01qVndlRHNnZlZ4dVhHNHVZV2x5TFdSaGRHVndhV05yWlhJdFkyVnNiQzR0YzJWc1pXTjBaV1F0SUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCMGNtRnVjM0JoY21WdWRDQWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDUmliR0ZqYXlBaGFXMXdiM0owWVc1ME8xeHVJQ0FnSUdOdmJHOXlPaUFrWW14aFkyc2dJV2x0Y0c5eWRHRnVkRHRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBeU1IQjRPeUI5WEc1Y2JpNWhhWEl0WkdGMFpYQnBZMnRsY2kxdVlYWXRMV0ZqZEdsdmJpQjdYRzRnSUNBZ2MzWm5JSHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaeTEwYjNBNklEVndlRHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQXljSGc3WEc0Z0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ01UaHdlRHRjYmlBZ0lDQWdJQ0FnWVhndGFHVnBaMmgwT2lBeE1uQjRPeUI5SUgxY2JseHVMbUZwY2kxa1lYUmxjR2xqYTJWeUxXNWhkaTB0WVdOMGFXOXVJSEJoZEdnZ2UxeHVJQ0FnSUdacGJHdzZJQ1JpYkdGamF5QWhhVzF3YjNKMFlXNTBPMXh1SUNBZ0lITjBjbTlyWlMxM2FXUjBhRG9nTUhCNElDRnBiWEJ2Y25SaGJuUTdJSDFjYmx4dUxtRnBjaTFrWVhSbGNHbGphMlZ5SUh0Y2JpQWdJQ0IzYVdSMGFEb2dNelUxY0hnZ0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNCaWIzSmtaWEk2SURKd2VDQnpiMnhwWkNBa1lteGhZMnNnSVdsdGNHOXlkR0Z1ZER0Y2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXdjSGdnSVdsdGNHOXlkR0Z1ZERzZ2ZWeHVJaXdpTG1OaGRHVm5iM0o1SUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdlaTFwYm1SbGVEb2dNVEF3TURBN1hHNGdJQ0FnZDJsa2RHZzZJRFEyT1hCNE8xeHVJQ0FnSUdobGFXZG9kRG9nTmpCd2VEdGNiaUFnSUNCaWIzSmtaWEk2SURKd2VDQnpiMnhwWkNBa1lteGhZMnM3WEc0Z0lDQWdiV2x1TFhkcFpIUm9PaUF5TnpCd2VEdGNibHh1SUNBZ0lFQnBibU5zZFdSbElHMTNLRFkxTUNrZ2UxeHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeU5YQjRPMXh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dPVEFsT3lCOVhHNWNiaUFnSUNBbUxtbHpMV0ZqZEdsMlpTQXVZMkYwWldkdmNubGZYMkp2WkhrZ2UxeHVYSFFnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3SUgxY2JseHVJQ0FnSUNaZlgyaGxZV1JsY2lCN1hHNGdJQ0FnSUNBZ0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQXlOWEI0TzF4dVhHNWNiaUFnSUNBZ0lDQWdKaTV0YjNKbE9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpwWjJoME9pQXpNSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9NVE0xWkdWbktTQjBjbUZ1YzJ4aGRHVlpLRGd3SlNrN0lIMGdmVnh1WEc0Z0lDQWdKbDlmWTNWeWNtVnVkQ0I3WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UWndlRHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nT0hCNE8xeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTkRSd2VEc2dmVnh1WEc1Y2JpQWdJQ0FtWDE5aWIyUjVJSHRjYmlBZ0lDQWdJQ0FnWW05eVpHVnlPaUF5Y0hnZ2MyOXNhV1FnSkdKc1lXTnJPMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0FnSUNBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQWdJSEpwWjJoME9pQXdPMXh1SUNBZ0lDQWdJQ0IwYjNBNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDTkZOVVUxUlRVN1hHNGdJQ0FnSUNBZ0lHMWhjbWRwYmpvZ01DQXRNWEI0TzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFd4bFpuUTZJREkxY0hnN1hHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01qQXdjSGc3WEc0Z0lDQWdJQ0FnSUc5MlpYSm1iRzkzTFhnNklHRjFkRzg3WEc0Z0lDQWdJQ0FnSUhOamNtOXNiR0poY2kxM2FXUjBhRG9nZEdocGJqdGNiaUFnSUNBZ0lDQWdjMk55YjJ4c1ltRnlMV052Ykc5eU9pQWtZbXhoWTJzN1hHNWNiaUFnSUNBZ0lDQWdKam82TFhkbFltdHBkQzF6WTNKdmJHeGlZWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklEbHdlRHNnZlZ4dVhHNGdJQ0FnSUNBZ0lDWTZPaTEzWldKcmFYUXRjMk55YjJ4c1ltRnlMWFJ5WVdOcklIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUmliR0ZqYXpzZ2ZWeHVYRzRnSUNBZ0lDQWdJQ1k2T2kxM1pXSnJhWFF0YzJOeWIyeHNZbUZ5TFhSb2RXMWlJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUmliR0ZqYXp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEQndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ00zQjRJSE52Ykdsa0lDUmliR0ZqYXpzZ2ZTQjlYRzVjYmlBZ0lDQW1YMTlwZEdWdElIdGNiaUFnSUNBZ0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREUyY0hnN1hHNGdJQ0FnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TXpVbE8xeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTWpSd2VEdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dPSEI0TzF4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQXVNbk03WEc1Y2JpQWdJQ0FnSUNBZ0pqcG9iM1psY2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKSEpsWkRzZ2ZTQjlJSDFjYmx4dUxtbHpMV0ZqZEdsMlpTQXViVzl5WlRwaFpuUmxjaUI3WEc0Z0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0MwME5XUmxaeWs3SUgxY2JseHVJbDE5ICovXG4iLCJcclxuLyogTGFyZ2UgZGVza3RvcHMgYW5kIGxhcHRvcHMgKi9cclxuQG1peGluIG13MTE4MCB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTE4MHB4KXtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIG13MTAzMCB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAzMHB4KXtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuLyogTGFuZHNjYXBlIHRhYmxldHMgYW5kIG1lZGl1bSBkZXNrdG9wcyAqL1xyXG5AbWl4aW4gbXc5Nzkge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk3OXB4KXtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuLyogUG9ydHJhaXQgdGFibGV0cyBhbmQgc21hbGwgZGVza3RvcHMgKi9cclxuQG1peGluIG13NzY4IHtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCl7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuLyogTGFuZHNjYXBlIHBob25lcyBhbmQgcG9ydHJhaXQgdGFibGV0cyAqL1xyXG5AbWl4aW4gbXc2MDAge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KXtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuLyogUG9ydHJhaXQgcGhvbmVzIGFuZCBzbWFsbGVyICovXHJcbkBtaXhpbiBtdzQ4MCB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpe1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG4vKiBJcGhvbmUgNSAqL1xyXG5AbWl4aW4gbXczMjAge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDMyMHB4KXtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuLyogTXVsdHlwdXJwb3NlIG1heC13aWR0aCBtaXhpbiAqL1xyXG5AbWl4aW4gbXcoJHdpZHRoKSB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJHdpZHRoICsgJ3B4Jykge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuLyogTXVsdHlwdXJwb3NlIG1pbi13aWR0aCBtaXhpbiAqL1xyXG5AbWl4aW4gbWludygkd2lkdGgpIHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkd2lkdGggKyAncHgnKSB7XHJcbiAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLyogUmVzcG9uc2l2ZSBwYXJhbWV0cnMgKi9cclxuXHJcbiRtYXhXaWR0aDogMTM2MDtcclxuXHJcbkBtaXhpbiBhZGFwdGl2ZS1mb250KCRwY1NpemUsICRtb2JTaXplKSB7XHJcbiAgICAkYWRkU2l6ZTogJHBjU2l6ZSAtICRtb2JTaXplO1xyXG4gICAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAzMjA7XHJcbiAgICBmb250LXNpemU6IGNhbGMoI3skbW9iU2l6ZSArIHB4fSArICN7JGFkZFNpemV9ICogKCgxMDB2dyAtIDMyMHB4KSAvICN7JG1heFdpZHRofSkpO1xyXG59XHJcblxyXG5AbWl4aW4gYWRhcHRpdmUtcGFkZGluZygkcGNTaXplLCAkbW9iU2l6ZSkge1xyXG4gICAgJGFkZFNpemU6ICRwY1NpemUgLSAkbW9iU2l6ZTtcclxuICAgICRtYXhXaWR0aDogJG1heFdpZHRoIC0gMzIwO1xyXG4gICAgcGFkZGluZzogY2FsYygjeyRtb2JTaXplICsgcHh9ICsgI3skYWRkU2l6ZX0gKiAoKDEwMHZ3IC0gMzIwcHgpIC8gI3skbWF4V2lkdGh9KSk7XHJcbn1cclxuXHJcbkBtaXhpbiBhZGFwdGl2ZS13aWR0aCgkcGNTaXplLCAkbW9iU2l6ZSkge1xyXG4gICAgJGFkZFNpemU6ICRwY1NpemUgLSAkbW9iU2l6ZTtcclxuICAgICRtYXhXaWR0aDogJG1heFdpZHRoIC0gMzIwO1xyXG4gICAgd2lkdGg6IGNhbGMoI3skbW9iU2l6ZSArIHB4fSArICN7JGFkZFNpemV9ICogKCgxMDB2dyAtIDMyMHB4KSAvICN7JG1heFdpZHRofSkpO1xyXG59XHJcblxyXG5AbWl4aW4gYWRhcHRpdmUtaGVpZ2h0KCRwY1NpemUsICRtb2JTaXplKSB7XHJcblxyXG4gICAgJGFkZFNpemU6ICRwY1NpemUgLSAkbW9iU2l6ZTtcclxuICAgICRtYXhXaWR0aDogJG1heFdpZHRoIC0gMzIwO1xyXG4gICAgaGVpZ2h0OiBjYWxjKCN7JG1vYlNpemUgKyBweH0gKyAjeyRhZGRTaXplfSAqICgoMTAwdncgLSAzMjBweCkgLyAjeyRtYXhXaWR0aH0pKTtcclxufVxyXG5cclxuLyogRW5kIHJlc3BvbnNpdmUgcGFyYW1ldHJzICovIiwiKiB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgYm9yZGVyOiAwOyB9XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbio6Zm9jdXMsICo6YWN0aXZlIHtcbiAgICBvdXRsaW5lOiBub25lOyB9XG5cbmJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiBGcmFuaywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICBiYWNrZ3JvdW5kOiAjRTVFNUU1O1xuICAgIGNvbG9yOiAkYmxhY2s7IH1cblxuLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxNTAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWluLXdpZHRoOiAzMzBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBAaW5jbHVkZSBtdygxNjAwKSB7XG4gICAgICAgIG1hcmdpbjogMCAyMHB4OyB9IH1cbnVsIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwOyB9XG5cbmEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0cmFuc2l0aW9uOiAuMnM7IH1cblxuXG4ud3JhcHBlciB7XG4gICAgbWF4LXdpZHRoOiAxMTUwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogMCAxNXB4IDA7IH1cblxuXG5cbiIsInN2ZyB7XG4gICAgbWF4LXdpZHRoOiAxOHB4O1xuICAgIG1heC1oZWlnaHQ6IDIwcHg7IH1cblxuLmJ0biB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyOiAycHggc29saWQgJHJlZDtcbiAgICBib3JkZXItcmFkaXVzOiA1NnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxNnB4IDI3cHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246IC4yczsgfVxuXG4ubW9yZSB7XG4gICAgJjo6YWZ0ZXIge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgIGJvcmRlci13aWR0aDogMC4xNWVtIDAuMTVlbSAwIDA7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGhlaWdodDogMC40NWVtO1xuICAgICAgICByaWdodDogLTIzcHg7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgICAgICB3aWR0aDogMC40NWVtO1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpIHRyYW5zbGF0ZVkoODAlKTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB0cmFuc2l0aW9uOiAuMXM7IH0gfVxuXG5cblxuLmRpc2FibGVkLWl0ZW0ge1xuICAgIGNvbG9yOiAkbGlnaHQtZ3JleTtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogJGxpZ2h0LWdyZXkgIWltcG9ydGFudDsgfSB9XG5cbi5kaXNhYmxlZC1lbCB7XG4gICAgYm9yZGVyOiAycHggc29saWQgJGxpZ2h0LWdyZXkgIWltcG9ydGFudDtcbiAgICBjb2xvcjogJGxpZ2h0LWdyZXk7IH1cblxuLmZvY3VzZWQge1xuICAgIHRvcDogLThweCAhaW1wb3J0YW50O1xuICAgIGZvbnQtc2l6ZTogMTFweCAhaW1wb3J0YW50OyB9XG5cbi5mb3JtLWFsZXJ0IHtcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICBmb250LXNpemU6IDE4cHg7IH1cblxuLl9lcnIge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkcmVkICFpbXBvcnRhbnQ7IH1cblxuLmVyci1tc2cge1xuICAgIGNvbG9yOiAkcmVkOyB9XG5cbi5zdWNjZXNzLW1zZyB7XG4gICAgY29sb3I6IGdyZWVuOyB9XG4iLCIuaGVhZGVyIHtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMTM1JTtcbiAgICBib3JkZXItYm90dG9tOiA0cHggc29saWQgJGJsYWNrO1xuICAgIHBhZGRpbmctYm90dG9tOiAyNHB4O1xuICAgIEBpbmNsdWRlIG13KDEyNDApIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDUwcHg7IH1cblxuICAgICZfX3RvcCB7XG4gICAgICAgIHBhZGRpbmctdG9wOiA1MnB4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA2MHB4O1xuXG4gICAgICAgIEBpbmNsdWRlIG13KDUxMCkge1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlOyB9XG5cbiAgICAgICAgJi1idG4ge1xuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgYm9yZGVyOiAjZmYwMDAwIDJweCBzb2xpZDsgfSB9XG5cblxuICAgICAgICAmLXJpZ2h0IHtcbiAgICAgICAgICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDUwcHg7IH1cblxuICAgICAgICAmLXBob25lIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNDRweDsgfVxuXG5cbiAgICAgICAgJi1zZWFyY2gge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMnB4O1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMnB4OyB9IH0gfVxuXG5cbiAgICAmX19ib3R0b20ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICBAaW5jbHVkZSBtdygxMjQwKSB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9IH1cblxuICAgICZfX21lbnUge1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMi4zczsgfVxuICAgIC5tZW51IHtcbiAgICAgICAgei1pbmRleDogMTAwMDA7XG5cblxuICAgICAgICBAaW5jbHVkZSBtdygxMjQwKSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDBweDtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47IH1cblxuICAgICAgICAmX19saXN0IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG13KDEyNDApIHtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfSB9XG5cblxuICAgICAgICAmX19pdGVtIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNDhweDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAgICAgQGluY2x1ZGUgbXcoMTQwMCkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjVweDsgfVxuICAgICAgICAgICAgQGluY2x1ZGUgbXcoMTI0MCkge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNXB4OyB9IH1cblxuXG5cblxuXG4gICAgICAgICZfX3N1Ymxpc3Qge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHotaW5kZXg6IDEwMDAwO1xuICAgICAgICAgICAgdG9wOiAyNXB4O1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNlNWU1ZTU7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4IDE4cHg7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAkYmxhY2s7IH1cblxuICAgICAgICAmX19zdWJpdGVtIHtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xuXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHJlZDsgfSB9XG5cbiAgICAgICAgJl9faXRlbTpob3Zlcj5hIC5tZW51X19zdWJsaXN0IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9XG5cblxuICAgICAgICAmLm1vYi1hY3RpdmUge1xuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgICAgb3ZlcmZsb3c6IHZpc2libGU7IH0gfVxuXG5cbiAgICAuc3Vic2NyaWJlIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgICBAaW5jbHVkZSBtdyg2NzApIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cblxuICAgICAgICAmX190ZXh0IHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNDhweDtcbiAgICAgICAgICAgIEBpbmNsdWRlIG13KDY3MCkge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9IH1cblxuICAgICAgICAmX19pY29ucyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDE2cHg7XG5cbiAgICAgICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfSB9IH0gfSB9XG5cbi5tZW51X19pdGVtLm1vcmUge1xuICAgICY6YWZ0ZXIge1xuICAgICAgICBAaW5jbHVkZSBtdygxMjQwKSB7XG4gICAgICAgICAgICB0b3A6IDMwJTtcbiAgICAgICAgICAgIHJpZ2h0OiAtMjBweDsgfSB9IH1cblxuXG4ubWVudV9fbW9iIHtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgd2lkdGg6IDcwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAmLWxpbmUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgaGVpZ2h0OiA4cHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICRibGFjazsgfVxuXG4gICAgQGluY2x1ZGUgbXcoMTI0MCkge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4gICAgQGluY2x1ZGUgbXcoNjUwKSB7XG4gICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICBoZWlnaHQ6IDMwcHg7XG5cbiAgICAgICAgJi1saW5lIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGhlaWdodDogNnB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJGJsYWNrOyB9IH0gfVxuXG5cblxuLm1vYi1hY3RpdmUgLm1lbnVfX21vYi1saW5lIHtcbiAgICBiYWNrZ3JvdW5kOiAkcmVkOyB9XG5cbi5tb2ItYWN0aXZlIC5tZW51X19tb2ItbGluZTpmaXJzdC1jaGlsZCB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZVkoMTJweCk7IH1cblxuLm1vYi1hY3RpdmUgLm1lbnVfX21vYi1saW5lOm50aC1jaGlsZCgyKSB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG4ubW9iLWFjdGl2ZSAubWVudV9fbW9iLWxpbmU6bGFzdC1jaGlsZCB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGVZKC0xMnB4KTsgfVxuXG5cbkBpbmNsdWRlIG13KDY1MCkge1xuICAgIC5tb2ItYWN0aXZlIC5tZW51X19tb2ItbGluZTpmaXJzdC1jaGlsZCB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGVZKDExcHgpOyB9XG5cbiAgICAubW9iLWFjdGl2ZSAubWVudV9fbW9iLWxpbmU6bGFzdC1jaGlsZCB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlWSgtMTFweCk7IH0gfVxuIiwiLm5ld3Mge1xuICAgIHBhZGRpbmctdG9wOiA1NXB4O1xuXG4gICAgJl9fdGl0bGUge1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgZm9udC1zaXplOiA3MHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTI1JTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDVweDsgfVxuXG4gICAgJl9fYnJlYWRjcnVtYnMge1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxMzUlO1xuICAgICAgICBjb2xvcjogJGxpZ2h0LWdyZXk7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA1NXB4OyB9XG5cbiAgICAmX19maWx0ZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgICAgIEBpbmNsdWRlIG13KDY1MCkge1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfSB9XG5cbiAgICAmX19jYWxlbmRhciB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB3aWR0aDogNDY4cHg7XG4gICAgICAgIGhlaWdodDogNjBweDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogNTBweDtcbiAgICAgICAgbWluLXdpZHRoOiAzMjBweDtcblxuICAgICAgICBAaW5jbHVkZSBtdyg2NTApIHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgbWluLXdpZHRoOiAyNzBweDsgfVxuICAgICAgICBpbnB1dCB7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjMzczMzM0O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDE1cHggMCA2NHB4O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IEZyYW5rLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxMzUlO1xuICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNFNUU1RTU7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgICAgLmNhbC1pY29uIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDI0cHg7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgfSB9XG5cblxuXG4gICAgJl9fbGlzdCB7XG4gICAgICAgIHBhZGRpbmctdG9wOiA4M3B4O1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdChhdXRvLCAxZnIpO1xuICAgICAgICBncmlkLWNvbHVtbi1nYXA6IDUwcHg7XG4gICAgICAgIGdyaWQtcm93LWdhcDogODBweDtcblxuICAgICAgICBAaW5jbHVkZSBtdygxMjQwKSB7XG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDQ1JSwgMWZyKSk7IH1cblxuICAgICAgICBAaW5jbHVkZSBtdyg2NTApIHtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoOTglLCAxZnIpKTsgfSB9XG4gICAgJl9faXRlbSB7XG4gICAgICAgIGhlaWdodDogNTAwcHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4gICAgJl9faXRlbS1pbWcge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNDBweDtcblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4gICAgJl9faXRlbS1tZXRhIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTJweDsgfVxuXG4gICAgJl9faXRlbS10YWdzIHtcbiAgICAgICAgY29sb3I6ICRyZWQ7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDQwcHg7IH1cblxuICAgICZfX2l0ZW0tdGFnIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDsgfVxuXG4gICAgJl9faXRlbS1kYXRlIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTE1JTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgcGFkZGluZy10b3A6IDNweDsgfVxuXG4gICAgJl9faXRlbS10aXRsZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA0NnB4OyB9XG5cbiAgICAmX190ZXh0IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuXG4gICAgLmV4dC1hcnJvdyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBtYXgtd2lkdGg6IDI4cHg7XG4gICAgICAgIG1heC1oZWlnaHQ6IDI4cHg7IH1cblxuICAgIC53aWRlLWFub3VuY2Uge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBoZWlnaHQ6IDM2MHB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEvNDtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICAgICAgcGFkZGluZzogNDhweDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgIEBpbmNsdWRlIG13KDEyNDApIHtcbiAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7IH1cblxuICAgICAgICBAaW5jbHVkZSBtdygxMDAwKSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDQ1MHB4OyB9XG5cbiAgICAgICAgQGluY2x1ZGUgbXcoNjUwKSB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjsgfVxuXG4gICAgICAgIC5uZXdzX19pdGVtLWluZm8ge1xuICAgICAgICAgICAgd2lkdGg6IDY1MHB4O1xuICAgICAgICAgICAgQGluY2x1ZGUgbXcoNjUwKSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDMwMHB4OyB9IH1cblxuICAgICAgICAubmV3c19fdGV4dCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjZweDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBGcmFua0xpZ2h0LCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmOyB9XG5cbiAgICAgICAgLmV4dC1hcnJvdyB7XG4gICAgICAgICAgICByaWdodDogMTIlO1xuICAgICAgICAgICAgYm90dG9tOiA1MHB4O1xuICAgICAgICAgICAgbGVmdDogYXV0bzsgfVxuXG4gICAgICAgIC5uZXdzX19pdGVtLWltZyB7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDUwcHg7XG4gICAgICAgICAgICBAaW5jbHVkZSBtdygxMjQwKSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDUwJTsgfVxuICAgICAgICAgICAgQGluY2x1ZGUgbXcoNjUwKSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7IH0gfSB9XG4gICAgLm5ld3NfX25hdiB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgd2lkdGg6IDI4MHB4O1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nLXRvcDogNzBweDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDNweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNzBweDtcblxuICAgICAgICAmLWFycm93IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGJvdHRvbTogLTEwcHg7XG4gICAgICAgICAgICB3aWR0aDogMTRweDtcbiAgICAgICAgICAgIGhlaWdodDogMTJweDsgfVxuXG4gICAgICAgICYtYXJyb3cubGVmdCB7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgICAgICBmaWxsOiAkYmxhY2s7IH0gfVxuXG4gICAgICAgICYtYXJyb3cucmlnaHQge1xuICAgICAgICAgICAgcmlnaHQ6IDA7IH1cblxuICAgICAgICAuaW5hY3RpdmUge1xuICAgICAgICAgICAgZmlsbDogJGxpZ2h0LWdyZXkgIWltcG9ydGFudDsgfVxuXG4gICAgICAgICYtbnVtYmVycyB7fVxuXG4gICAgICAgICYtbnVtYmVyIHtcbiAgICAgICAgICAgIG1hcmdpbjogMCAxMXB4O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG4gICAgICAgICYtbnVtYmVyLmFjdGl2ZSB7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJHJlZDsgfSB9IH1cbiIsIi5mb290ZXIge1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgcGFkZGluZy1ib3R0b206IDUwcHg7XG5cblxuICAgIC5zdWJzY3JpYmUge1xuICAgICAgICBwYWRkaW5nLXRvcDogNTlweDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDU0cHg7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkYmxhY2s7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDQ3cHg7XG5cbiAgICAgICAgJl9fdGV4dCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxMTUlOyB9XG5cbiAgICAgICAgJl9faWNvbnMge1xuICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDsgfSB9IH1cblxuICAgICZfX2JvdHRvbSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbiAgICAmX19jcmVkaXRzIHtcbiAgICAgICAgQGluY2x1ZGUgbXcoNDAwKSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDExcHg7IH0gfVxuXG4gICAgJl9fY29weXJpZ2h0IHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cblxuXG4gICAgJl9feHBhZ2Uge1xuICAgICAgICBzdmcge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA3NHB4O1xuICAgICAgICAgICAgbWF4LWhlaWdodDogMjBweDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgIHJpZ2h0OiAwOyB9IH0gfVxuIiwiLm5ld3MtZGV0YWlscyB7XG4gICAgcGFkZGluZy10b3A6IDU1cHg7XG5cbiAgICAmX190aXRsZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBmb250LXNpemU6IDU0cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxMjUlO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xuICAgICAgICBAaW5jbHVkZSBtdyg2NTApIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDsgfSB9XG5cbiAgICAmX19icmVhZGNydW1icyB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEzNSU7XG4gICAgICAgIGNvbG9yOiAkbGlnaHQtZ3JleTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDU1cHg7IH1cblxuXG4gICAgJl9faXRlbSB7XG4gICAgICAgIGhlaWdodDogNTAwcHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG5cbiAgICAmX19pdGVtLW1ldGEge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMnB4OyB9XG5cblxuICAgICZfX2l0ZW0tdGFncyB7XG4gICAgICAgIGNvbG9yOiAkcmVkO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4OyB9XG5cbiAgICAmX19pdGVtLXRhZyB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7IH1cblxuXG4gICAgJl9faXRlbS1kYXRlIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTE1JTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgcGFkZGluZy10b3A6IDNweDsgfVxuXG4gICAgLm5ld3Mge1xuICAgICAgICBwYWRkaW5nOiA0M3B4IDAgMTM5cHggMDtcbiAgICAgICAgbWF4LXdpZHRoOiA5ODVweDtcbiAgICAgICAgYm9yZGVyLXRvcDogc29saWQgMnB4ICRibGFjaztcblxuICAgICAgICBoNCB7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMzBweDsgfVxuXG4gICAgICAgIHAge1xuICAgICAgICAgICAgcGFkZGluZzogMjVweCAwIDUwcHg7XG4gICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI2cHg7XG4gICAgICAgICAgICBmb250LWZhbWlseTogRnJhbmtMaWdodCwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsgfVxuXG4gICAgICAgIHZpZGVvIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOyB9XG5cbiAgICAgICAgc3Ryb25nIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAzMHB4OyB9XG5cbiAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEzNSU7XG4gICAgICAgICAgICBjb2xvcjogJGxpZ2h0LWdyZXk7IH1cblxuICAgICAgICBociB7XG4gICAgICAgICAgICBtYXJnaW46IDAgMCAyNXB4O1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMzMzOyB9XG5cblxuICAgICAgICAmX19tZXRhIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG13KDk1MCkge1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cblxuICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRibGFjazsgfVxuXG4gICAgICAgICAgICAmLXRpdGxlIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJGJsYWNrO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNHB4O1xuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBGcmFua0xpZ2h0LCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTM1JTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4OyB9IH1cblxuXG4gICAgICAgICZfX2F1dGhvciB7XG4gICAgICAgICAgICB3aWR0aDogMzUlO1xuICAgICAgICAgICAgQGluY2x1ZGUgbXcoOTUwKSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7IH1cblxuICAgICAgICAgICAgJi1uYW1lIHtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMjdweDsgfSB9XG5cbiAgICAgICAgJl9fdGFncyB7XG4gICAgICAgICAgICB3aWR0aDogMzUlO1xuICAgICAgICAgICAgQGluY2x1ZGUgbXcoOTUwKSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7IH1cblxuICAgICAgICAgICAgJi1saXN0IHtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTM1JTsgfSB9XG5cblxuICAgICAgICAmX19zaGFyZSB7XG4gICAgICAgICAgICB3aWR0aDogMjAlO1xuICAgICAgICAgICAgQGluY2x1ZGUgbXcoOTUwKSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDE2cHg7IH0gfSB9IH1cbiIsIi5mb3JtX193cmFwcGVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiAkYmxhY2s7XG4gICAgY29sb3I6ICNmZmZmZmY7XG5cblxuICAgIC5mb3JtX190aXRsZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogNTJweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEyNSU7XG4gICAgICAgIHBhZGRpbmc6IDkwcHggMCA1MHB4O1xuXG4gICAgICAgIEBpbmNsdWRlIG13KDY1MCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4OyB9IH1cblxuICAgIC5mb3JtIHtcbiAgICAgICAgbWF4LXdpZHRoOiA5ODVweDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEwOHB4O1xuXG4gICAgICAgIC5pbnB1dC13cmFwIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIEBpbmNsdWRlIG13KDk3NSkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7IH1cblxuICAgICAgICAgICAgc3Bhbi5mb3JtX19wbGFjZWhvbGRlciB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxMzUlO1xuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBGcmFua0xpZ2h0LCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IC4yczsgfSB9XG5cbiAgICAgICAgaW5wdXQge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0ZGRkZGRjtcbiAgICAgICAgICAgIGhlaWdodDogNDBweDtcblxuICAgICAgICAgICAgJlt0eXBlPVwidGV4dFwiXSB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMCAxMHB4OyB9IH1cblxuXG5cbiAgICAgICAgLy8gaW5wdXQ6Zm9jdXMgKyAuZm9ybV9fcGxhY2Vob2xkZXIsXG4gICAgICAgIC8vIGlucHV0OmFjdGl2ZSArIC5mb3JtX19wbGFjZWhvbGRlcixcbiAgICAgICAgLy8gICAgIHRvcDogLThweFxuICAgICAgICAvLyAgICAgZm9udC1zaXplOiAxMXB4XG5cblxuICAgICAgICAmX190b3AtbGluZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDQ4cHg7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG13KDk3NSkge1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH0gfVxuXG4gICAgICAgICZfX25hbWUge1xuICAgICAgICAgICAgd2lkdGg6IDMzOHB4O1xuICAgICAgICAgICAgQGluY2x1ZGUgbXcoOTc1KSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuICAgICAgICAmX19lbWFpbCB7XG4gICAgICAgICAgICB3aWR0aDogMzM4cHg7XG4gICAgICAgICAgICBAaW5jbHVkZSBtdyg5NzUpIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbiAgICAgICAgJl9fZmlsZSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHdpZHRoOiAwO1xuICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgICAgQGluY2x1ZGUgbXcoOTc1KSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7IH1cblxuICAgICAgICAgICAgJi1sYWJlbCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuICAgICAgICAgICAgJi1pY29uIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMnB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7IH1cblxuICAgICAgICAgICAgJi1idG4ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG5cbiAgICAgICAgJl9fY29tbWVudCB7XG4gICAgICAgICAgICB3aWR0aDogOTg1cHg7XG4gICAgICAgICAgICBAaW5jbHVkZSBtdyg5NzUpIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbiAgICAgICAgJl9fc3VibWl0IHtcbiAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNGRkZGRkY7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1NnB4O1xuICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgd2lkdGg6IDE2MHB4O1xuICAgICAgICAgICAgY29sb3I6ICNmZmZmZmY7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiA4MnB4O1xuICAgICAgICAgICAgcGFkZGluZzogMDtcblxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmOyB9IH0gfSB9XG4iLCIuYWlyLWRhdGVwaWNrZXItLWNvbnRlbnQge1xuICAgIGNvbG9yOiAkYmxhY2sgIWltcG9ydGFudDtcbiAgICBmb250LWZhbWlseTogRnJhbmssIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gICAgd2lkdGg6IDM1MHB4OyB9XG5cbi5haXItZGF0ZXBpY2tlci1ib2R5LS1kYXktbmFtZSB7XG4gICAgcGFkZGluZy1ib3R0b206IDNweDtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJGJsYWNrO1xuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7IH1cblxuLmFpci1kYXRlcGlja2VyLWJvZHktLWRheS1uYW1lIHtcbiAgICBjb2xvcjogJGJsYWNrICFpbXBvcnRhbnQ7IH1cblxuLmFpci1kYXRlcGlja2VyLWNlbGwge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB3aWR0aDogMjVweDtcbiAgICBoZWlnaHQ6IDI1cHg7IH1cblxuLmFpci1kYXRlcGlja2VyLWNlbGwuLXNlbGVjdGVkLSB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkYmxhY2sgIWltcG9ydGFudDtcbiAgICBjb2xvcjogJGJsYWNrICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogMjBweDsgfVxuXG4uYWlyLWRhdGVwaWNrZXItbmF2LS1hY3Rpb24ge1xuICAgIHN2ZyB7XG4gICAgICAgIHBhZGRpbmctdG9wOiA1cHg7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMnB4O1xuICAgICAgICBtYXgtd2lkdGg6IDE4cHg7XG4gICAgICAgIGF4LWhlaWdodDogMTJweDsgfSB9XG5cbi5haXItZGF0ZXBpY2tlci1uYXYtLWFjdGlvbiBwYXRoIHtcbiAgICBmaWxsOiAkYmxhY2sgIWltcG9ydGFudDtcbiAgICBzdHJva2Utd2lkdGg6IDBweCAhaW1wb3J0YW50OyB9XG5cbi5haXItZGF0ZXBpY2tlciB7XG4gICAgd2lkdGg6IDM1NXB4ICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyOiAycHggc29saWQgJGJsYWNrICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogMHB4ICFpbXBvcnRhbnQ7IH1cbiIsIi5jYXRlZ29yeSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDEwMDAwO1xuICAgIHdpZHRoOiA0NjlweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgYm9yZGVyOiAycHggc29saWQgJGJsYWNrO1xuICAgIG1pbi13aWR0aDogMjcwcHg7XG5cbiAgICBAaW5jbHVkZSBtdyg2NTApIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcbiAgICAgICAgd2lkdGg6IDkwJTsgfVxuXG4gICAgJi5pcy1hY3RpdmUgLmNhdGVnb3J5X19ib2R5IHtcblx0ICAgIGRpc3BsYXk6IGJsb2NrOyB9XG5cbiAgICAmX19oZWFkZXIge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMjVweDtcblxuXG4gICAgICAgICYubW9yZTphZnRlciB7XG4gICAgICAgICAgICByaWdodDogMzBweDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZykgdHJhbnNsYXRlWSg4MCUpOyB9IH1cblxuICAgICZfX2N1cnJlbnQge1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIHBhZGRpbmc6IDhweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDQ0cHg7IH1cblxuXG4gICAgJl9fYm9keSB7XG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICRibGFjaztcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgdG9wOiAxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kOiAjRTVFNUU1O1xuICAgICAgICBtYXJnaW46IDAgLTFweDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyNXB4O1xuICAgICAgICBoZWlnaHQ6IDIwMHB4O1xuICAgICAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgICAgICBzY3JvbGxiYXItd2lkdGg6IHRoaW47XG4gICAgICAgIHNjcm9sbGJhci1jb2xvcjogJGJsYWNrO1xuXG4gICAgICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgICAgICAgIHdpZHRoOiA5cHg7IH1cblxuICAgICAgICAmOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkYmxhY2s7IH1cblxuICAgICAgICAmOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwcHg7XG4gICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCAkYmxhY2s7IH0gfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTM1JTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICAgIHBhZGRpbmc6IDhweDtcbiAgICAgICAgdHJhbnNpdGlvbjogLjJzO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICRyZWQ7IH0gfSB9XG5cbi5pcy1hY3RpdmUgLm1vcmU6YWZ0ZXIge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOyB9XG5cbiJdfQ== */
